{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/Exchange.js\";\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExchangeIcon from \"@material-ui/icons/AttachMoney\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nconst useStyles = makeStyles(theme => ({\n  exchangeHeader: {\n    backgroundColor: \"#A0A0A0\",\n    color: \"#FFFFFF\"\n  },\n  save: {\n    backgroundColor: \"#12ACDE\",\n    border: \"#12ACDE\",\n    color: \"#FFFFFF\",\n    \"&:hover\": {\n      backgroundColor: \"#0F91BC\"\n    }\n  },\n  exchangeConfig: {\n    align: \"right\"\n  }\n}));\n\nconst getLatestExchangeData = async (base = \"EUR\") => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest?base=' + base\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst ExchangeCard = () => {\n  const classes = useStyles();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(\"EUR\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        Base = _useState4[0],\n        setBase = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        BaseValue = _useState6[0],\n        setBaseValue = _useState6[1];\n\n  const _useState7 = useState(\"USD\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        Currency = _useState8[0],\n        setCurrency = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        CurrencyValue = _useState10[0],\n        setCurrencyValue = _useState10[1];\n\n  const _useState11 = useState(\"EUR\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        modalBase = _useState12[0],\n        setModalBase = _useState12[1];\n\n  const _useState13 = useState(\"USD\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        modalExchange = _useState14[0],\n        setModalExchange = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        hidden = _useState16[0],\n        setHidden = _useState16[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let res = await getLatestExchangeData(Base);\n      setData(res);\n      setCurrencyValue(0);\n      setBaseValue(0);\n    }\n\n    fetchData();\n  }, [Base, Currency]);\n\n  const content = data => {\n    if (data === undefined) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"15px\",\n          marginRight: \"15px\",\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      let base = data.base;\n      let date = data.date;\n      let currency = data.rates[Currency];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Date : \", date)), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Base currency :\"), React.createElement(Input, {\n        value: BaseValue,\n        onChange: e => {\n          setBaseValue(e.target.value);\n          setCurrencyValue(e.target.value * currency);\n        },\n        style: {\n          width: \"80%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, base)), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Exchange currency :\"), React.createElement(Input, {\n        value: CurrencyValue,\n        onChange: e => {\n          setCurrencyValue(e.target.value);\n          setBaseValue(e.target.value / currency);\n        },\n        style: {\n          width: \"80%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, Currency))));\n    }\n  };\n\n  const _useState17 = useState(true),\n        _useState18 = _slicedToArray(_useState17, 2),\n        modal = _useState18[0],\n        setModal = _useState18[1];\n\n  const toggle = () => setModal(!modal);\n\n  if (hidden === \"hidden\") {\n    return React.createElement(Card, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Nasa\");\n  } else {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: modal,\n      onHide: toggle,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Params\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Base currency\"), React.createElement(Input, {\n      type: \"select\",\n      onChange: e => setModalBase(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: Base === \"EUR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"EUR\"), React.createElement(\"option\", {\n      selected: Base === \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"USD\"), React.createElement(\"option\", {\n      selected: Base === \"JPY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"JPY\"), React.createElement(\"option\", {\n      selected: Base === \"CAD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"CAD\"), React.createElement(\"option\", {\n      selected: Base === \"HKD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"HKD\"), React.createElement(\"option\", {\n      selected: Base === \"ISK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"ISK\"), React.createElement(\"option\", {\n      selected: Base === \"PHP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"PHP\"), React.createElement(\"option\", {\n      selected: Base === \"DKK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"DKK\"), React.createElement(\"option\", {\n      selected: Base === \"HUF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"HUF\"), React.createElement(\"option\", {\n      selected: Base === \"CZK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"CZK\"), React.createElement(\"option\", {\n      selected: Base === \"AUD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"AUD\"), React.createElement(\"option\", {\n      selected: Base === \"RON\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"RON\"), React.createElement(\"option\", {\n      selected: Base === \"SEK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"SEK\"), React.createElement(\"option\", {\n      selected: Base === \"IDR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"IDR\"), React.createElement(\"option\", {\n      selected: Base === \"INR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"INR\"), React.createElement(\"option\", {\n      selected: Base === \"BRL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"BRL\"), React.createElement(\"option\", {\n      selected: Base === \"RUB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"RUB\"), React.createElement(\"option\", {\n      selected: Base === \"HRK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"HRK\"), React.createElement(\"option\", {\n      selected: Base === \"THB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"THB\"), React.createElement(\"option\", {\n      selected: Base === \"CHF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"CHF\"), React.createElement(\"option\", {\n      selected: Base === \"SGD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"SGD\"), React.createElement(\"option\", {\n      selected: Base === \"PLN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"PLN\"), React.createElement(\"option\", {\n      selected: Base === \"BGN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"BGN\"), React.createElement(\"option\", {\n      selected: Base === \"TRY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"TRY\"), React.createElement(\"option\", {\n      selected: Base === \"CNY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"CNY\"), React.createElement(\"option\", {\n      selected: Base === \"NOK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"NOK\"), React.createElement(\"option\", {\n      selected: Base === \"NZD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"NZD\"), React.createElement(\"option\", {\n      selected: Base === \"ZAR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"ZAR\"), React.createElement(\"option\", {\n      selected: Base === \"MXN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"MXN\"), React.createElement(\"option\", {\n      selected: Base === \"ILS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"ILS\"), React.createElement(\"option\", {\n      selected: Base === \"GBP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"GBP\"), React.createElement(\"option\", {\n      selected: Base === \"KRW\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"KRW\"), React.createElement(\"option\", {\n      selected: Base === \"MYR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"MYR\"))))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Exchange currency\"), React.createElement(Input, {\n      type: \"select\",\n      onChange: e => setModalExchange(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: Currency === \"EUR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"EUR\"), React.createElement(\"option\", {\n      selected: Currency === \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"USD\"), React.createElement(\"option\", {\n      selected: Currency === \"JPY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"JPY\"), React.createElement(\"option\", {\n      selected: Currency === \"CAD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"CAD\"), React.createElement(\"option\", {\n      selected: Currency === \"HKD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"HKD\"), React.createElement(\"option\", {\n      selected: Currency === \"ISK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"ISK\"), React.createElement(\"option\", {\n      selected: Currency === \"PHP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"PHP\"), React.createElement(\"option\", {\n      selected: Currency === \"DKK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"DKK\"), React.createElement(\"option\", {\n      selected: Currency === \"HUF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"HUF\"), React.createElement(\"option\", {\n      selected: Currency === \"CZK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"CZK\"), React.createElement(\"option\", {\n      selected: Currency === \"AUD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"AUD\"), React.createElement(\"option\", {\n      selected: Currency === \"RON\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"RON\"), React.createElement(\"option\", {\n      selected: Currency === \"SEK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"SEK\"), React.createElement(\"option\", {\n      selected: Currency === \"IDR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"IDR\"), React.createElement(\"option\", {\n      selected: Currency === \"INR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"INR\"), React.createElement(\"option\", {\n      selected: Currency === \"BRL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"BRL\"), React.createElement(\"option\", {\n      selected: Currency === \"RUB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"RUB\"), React.createElement(\"option\", {\n      selected: Currency === \"HRK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"HRK\"), React.createElement(\"option\", {\n      selected: Currency === \"THB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"THB\"), React.createElement(\"option\", {\n      selected: Currency === \"CHF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"CHF\"), React.createElement(\"option\", {\n      selected: Currency === \"SGD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"SGD\"), React.createElement(\"option\", {\n      selected: Currency === \"PLN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"PLN\"), React.createElement(\"option\", {\n      selected: Currency === \"BGN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"BGN\"), React.createElement(\"option\", {\n      selected: Currency === \"TRY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"TRY\"), React.createElement(\"option\", {\n      selected: Currency === \"CNY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"CNY\"), React.createElement(\"option\", {\n      selected: Currency === \"NOK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"NOK\"), React.createElement(\"option\", {\n      selected: Currency === \"NZD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"NZD\"), React.createElement(\"option\", {\n      selected: Currency === \"ZAR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"ZAR\"), React.createElement(\"option\", {\n      selected: Currency === \"MXN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"MXN\"), React.createElement(\"option\", {\n      selected: Currency === \"ILS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"ILS\"), React.createElement(\"option\", {\n      selected: Currency === \"GBP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"GBP\"), React.createElement(\"option\", {\n      selected: Currency === \"KRW\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"KRW\"), React.createElement(\"option\", {\n      selected: Currency === \"MYR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"MYR\"))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.save,\n      onClick: () => {\n        setBase(modalBase);\n        setCurrency(modalExchange);\n        toggle();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Toolbar, {\n      position: \"static\",\n      className: classes.exchangeHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(ExchangeIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: {\n        textAlign: \"center\"\n      },\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Exchange\"))), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: () => setHidden(\"hidden\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }))))), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, content(data)));\n  }\n};\n\nexport default ExchangeCard;","map":{"version":3,"sources":["/dashboard/src/widgets/Exchange.js"],"names":["axios","Card","Toolbar","IconButton","ExchangeIcon","SettingsIcon","DeleteIcon","Typography","CardContent","React","useEffect","useState","Modal","makeStyles","Grid","Button","Form","FormGroup","Input","useStyles","theme","exchangeHeader","backgroundColor","color","save","border","exchangeConfig","align","getLatestExchangeData","base","response","method","url","data","e","console","log","ExchangeCard","classes","undefined","setData","Base","setBase","BaseValue","setBaseValue","Currency","setCurrency","CurrencyValue","setCurrencyValue","modalBase","setModalBase","modalExchange","setModalExchange","hidden","setHidden","fetchData","res","content","textAlign","marginLeft","marginRight","marginTop","date","currency","rates","target","value","width","modal","setModal","toggle"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExchangeIcon from \"@material-ui/icons/AttachMoney\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, {useEffect, useState} from \"react\";\nimport {Modal} from \"react-bootstrap\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button, Form, FormGroup, Input} from \"reactstrap\";\n\nconst useStyles = makeStyles(theme => ({\n    exchangeHeader: {\n        backgroundColor: \"#A0A0A0\",\n        color: \"#FFFFFF\"\n    },\n    save: {\n        backgroundColor: \"#12ACDE\",\n        border: \"#12ACDE\",\n        color: \"#FFFFFF\",\n        \"&:hover\": {\n            backgroundColor: \"#0F91BC\"\n        }\n    },\n    exchangeConfig: {\n        align: \"right\",\n    },\n}));\n\nconst getLatestExchangeData = async (base=\"EUR\") => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: 'https://api.exchangeratesapi.io/latest?base=' + base,\n        });\n        return response.data;\n    } catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst ExchangeCard = () => {\n    const classes = useStyles();\n    const [data, setData] = useState(undefined);\n    const [Base, setBase] = useState(\"EUR\");\n    const [BaseValue, setBaseValue] = useState(0);\n    const [Currency, setCurrency] = useState(\"USD\");\n    const [CurrencyValue, setCurrencyValue] = useState(0);\n    const [modalBase, setModalBase] = useState(\"EUR\");\n    const [modalExchange, setModalExchange] = useState(\"USD\");\n    const [hidden, setHidden] = useState(null);\n\n    useEffect(\n        () => {\n            async function fetchData() {\n                let res = await getLatestExchangeData(Base);\n                setData(res);\n                setCurrencyValue(0);\n                setBaseValue(0);\n            }\n\n            fetchData();\n        }, [Base, Currency]);\n\n    const content = (data) => {\n        if (data === undefined) {\n            return (\n                <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                    <h4>Loading</h4>\n                </div>\n            );\n        } else {\n            let base = data.base;\n            let date = data.date;\n            let currency = data.rates[Currency];\n\n            return (\n                <div>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                Date : {date}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"h6\">\n                                Base currency :\n                            </Typography>\n                            <Input value={BaseValue} onChange={(e) => {\n                                setBaseValue(e.target.value);\n                                setCurrencyValue(e.target.value * currency);\n                            }} style={{width: \"80%\"}}/>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                {base}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"h6\">\n                                Exchange currency :\n                            </Typography>\n                            <Input value={CurrencyValue} onChange={(e) => {\n                                setCurrencyValue(e.target.value);\n                                setBaseValue(e.target.value / currency);\n                            }} style={{width: \"80%\"}}/>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                {Currency}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        }\n    };\n\n    const [modal, setModal] = useState(true);\n\n    const toggle = () => setModal(!modal);\n\n    if (hidden === \"hidden\") {\n        return (<Card hidden>Nasa</Card>);\n    } else {\n        return (\n            <Card>\n                <Modal show={modal} onHide={toggle} centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Params</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <FormGroup>\n                                <label>Base currency</label>\n                                <Input type=\"select\" onChange={e => setModalBase(e.target.value)}>\n                                    <option selected={Base === \"EUR\"}>EUR</option>\n                                    <option selected={Base === \"USD\"}>USD</option>\n                                    <option selected={Base === \"JPY\"}>JPY</option>\n                                    <option selected={Base === \"CAD\"}>CAD</option>\n                                    <option selected={Base === \"HKD\"}>HKD</option>\n                                    <option selected={Base === \"ISK\"}>ISK</option>\n                                    <option selected={Base === \"PHP\"}>PHP</option>\n                                    <option selected={Base === \"DKK\"}>DKK</option>\n                                    <option selected={Base === \"HUF\"}>HUF</option>\n                                    <option selected={Base === \"CZK\"}>CZK</option>\n                                    <option selected={Base === \"AUD\"}>AUD</option>\n                                    <option selected={Base === \"RON\"}>RON</option>\n                                    <option selected={Base === \"SEK\"}>SEK</option>\n                                    <option selected={Base === \"IDR\"}>IDR</option>\n                                    <option selected={Base === \"INR\"}>INR</option>\n                                    <option selected={Base === \"BRL\"}>BRL</option>\n                                    <option selected={Base === \"RUB\"}>RUB</option>\n                                    <option selected={Base === \"HRK\"}>HRK</option>\n                                    <option selected={Base === \"THB\"}>THB</option>\n                                    <option selected={Base === \"CHF\"}>CHF</option>\n                                    <option selected={Base === \"SGD\"}>SGD</option>\n                                    <option selected={Base === \"PLN\"}>PLN</option>\n                                    <option selected={Base === \"BGN\"}>BGN</option>\n                                    <option selected={Base === \"TRY\"}>TRY</option>\n                                    <option selected={Base === \"CNY\"}>CNY</option>\n                                    <option selected={Base === \"NOK\"}>NOK</option>\n                                    <option selected={Base === \"NZD\"}>NZD</option>\n                                    <option selected={Base === \"ZAR\"}>ZAR</option>\n                                    <option selected={Base === \"MXN\"}>MXN</option>\n                                    <option selected={Base === \"ILS\"}>ILS</option>\n                                    <option selected={Base === \"GBP\"}>GBP</option>\n                                    <option selected={Base === \"KRW\"}>KRW</option>\n                                    <option selected={Base === \"MYR\"}>MYR</option>\n                                </Input>\n                            </FormGroup>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Body>\n                        <Form>\n                            <FormGroup>\n                                <label>Exchange currency</label>\n                                <Input type=\"select\" onChange={e => setModalExchange(e.target.value)}>\n                                    <option selected={Currency === \"EUR\"}>EUR</option>\n                                    <option selected={Currency === \"USD\"}>USD</option>\n                                    <option selected={Currency === \"JPY\"}>JPY</option>\n                                    <option selected={Currency === \"CAD\"}>CAD</option>\n                                    <option selected={Currency === \"HKD\"}>HKD</option>\n                                    <option selected={Currency === \"ISK\"}>ISK</option>\n                                    <option selected={Currency === \"PHP\"}>PHP</option>\n                                    <option selected={Currency === \"DKK\"}>DKK</option>\n                                    <option selected={Currency === \"HUF\"}>HUF</option>\n                                    <option selected={Currency === \"CZK\"}>CZK</option>\n                                    <option selected={Currency === \"AUD\"}>AUD</option>\n                                    <option selected={Currency === \"RON\"}>RON</option>\n                                    <option selected={Currency === \"SEK\"}>SEK</option>\n                                    <option selected={Currency === \"IDR\"}>IDR</option>\n                                    <option selected={Currency === \"INR\"}>INR</option>\n                                    <option selected={Currency === \"BRL\"}>BRL</option>\n                                    <option selected={Currency === \"RUB\"}>RUB</option>\n                                    <option selected={Currency === \"HRK\"}>HRK</option>\n                                    <option selected={Currency === \"THB\"}>THB</option>\n                                    <option selected={Currency === \"CHF\"}>CHF</option>\n                                    <option selected={Currency === \"SGD\"}>SGD</option>\n                                    <option selected={Currency === \"PLN\"}>PLN</option>\n                                    <option selected={Currency === \"BGN\"}>BGN</option>\n                                    <option selected={Currency === \"TRY\"}>TRY</option>\n                                    <option selected={Currency === \"CNY\"}>CNY</option>\n                                    <option selected={Currency === \"NOK\"}>NOK</option>\n                                    <option selected={Currency === \"NZD\"}>NZD</option>\n                                    <option selected={Currency === \"ZAR\"}>ZAR</option>\n                                    <option selected={Currency === \"MXN\"}>MXN</option>\n                                    <option selected={Currency === \"ILS\"}>ILS</option>\n                                    <option selected={Currency === \"GBP\"}>GBP</option>\n                                    <option selected={Currency === \"KRW\"}>KRW</option>\n                                    <option selected={Currency === \"MYR\"}>MYR</option>\n                                </Input>\n                            </FormGroup>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className={classes.save} onClick={() => {\n                            setBase(modalBase);\n                            setCurrency(modalExchange);\n                            toggle()\n                        }}>Save</Button>\n                    </Modal.Footer>\n                </Modal>\n                <Toolbar position=\"static\" className={classes.exchangeHeader}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={2}>\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                                <ExchangeIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={8}>\n                            <div style={{marginTop: \"10px\"}}>\n                                <Typography style={{textAlign: \"center\"}} variant=\"h5\">\n                                    Exchange\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton color=\"inherit\" aria-label=\"menu\" onClick={toggle}>\n                                <SettingsIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton color=\"inherit\" aria-label=\"menu\" onClick={() => setHidden(\"hidden\")}>\n                                <DeleteIcon/>\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n                <CardContent>\n                    {content(data)}\n                </CardContent>\n            </Card>\n        );\n    }\n};\n\nexport default ExchangeCard;\n"]},"metadata":{},"sourceType":"module"}