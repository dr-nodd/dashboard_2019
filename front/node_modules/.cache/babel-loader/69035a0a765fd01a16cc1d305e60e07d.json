{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/Potter.js\";\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PotterIcon from \"@material-ui/icons/FlashOn\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal } from 'react-bootstrap';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport { makeStyles } from \"@material-ui/core\";\nconst apiKey = \"$2a$10$ShDxgu/CAJZd/j01jcAxs.7bKZy4/aeJ4fH.Z.Ss4gc0s/wYZ5hku\";\nconst entryPoint = \"https://www.potterapi.com/v1/\";\nconst useStyles = makeStyles(theme => ({\n  potterHeader: {\n    backgroundColor: \"#4ed64a\",\n    color: \"#FFFFFF\"\n  },\n  save: {\n    backgroundColor: \"#12ACDE\",\n    border: \"#12ACDE\",\n    color: \"#FFFFFF\",\n    \"&:hover\": {\n      backgroundColor: \"#0F91BC\"\n    }\n  }\n}));\n\nconst getCharactersFromHouse = async house => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: entryPoint + 'characters?house=' + house + '&key=' + apiKey\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst PotterCard = props => {\n  const classes = useStyles();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(\"Hufflepuff\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        house = _useState4[0],\n        setHouse = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        id = _useState6[0],\n        setId = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        reset = _useState8[0],\n        setReset = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        hidden = _useState10[0],\n        setHidden = _useState10[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let res = await getCharactersFromHouse(house);\n      setData(res);\n      setId(Math.floor(Math.random() * res.length));\n    }\n\n    fetchData();\n  }, [house, reset]);\n\n  const content = data => {\n    if (data === undefined) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"15px\",\n          marginRight: \"15px\",\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      let name = data[id].name;\n      let house = data[id].house;\n      let school = data[id].school;\n      let bloodStatus = data[id].bloodStatus;\n      let species = data[id].species;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, name)), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: () => {\n          setReset(reset + 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(LoopIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Species : \", species)), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Blood Status : \", bloodStatus)), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"School : \", school)), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"House : \", house))));\n    }\n  };\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        modal = _useState12[0],\n        setModal = _useState12[1];\n\n  const _useState13 = useState(\"Hufflepuff\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        modalHouse = _useState14[0],\n        setModalHouse = _useState14[1];\n\n  const toggle = () => setModal(!modal);\n\n  if (hidden === \"hidden\") {\n    return React.createElement(Card, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Nasa\");\n  } else {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: modal,\n      onHide: toggle,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Choose a house\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Houses\"), React.createElement(Input, {\n      type: \"select\",\n      onChange: e => setModalHouse(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: house === \"Hufflepuff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Hufflepuff\"), React.createElement(\"option\", {\n      selected: house === \"Ravenclaw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Ravenclaw\"), React.createElement(\"option\", {\n      selected: house === \"Gryffindor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Gryffindor\"), React.createElement(\"option\", {\n      selected: house === \"Slytherin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Slytherin\"))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.save,\n      onClick: () => {\n        setHouse(modalHouse);\n        toggle();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Toolbar, {\n      position: \"static\",\n      className: classes.potterHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(PotterIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: {\n        textAlign: \"center\"\n      },\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Harry Potter\"))), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: () => setHidden(\"hidden\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))))), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, content(data)));\n  }\n};\n\nexport default PotterCard;","map":{"version":3,"sources":["/dashboard/src/widgets/Potter.js"],"names":["axios","Card","Grid","Toolbar","IconButton","PotterIcon","SettingsIcon","DeleteIcon","LoopIcon","Typography","CardContent","React","useEffect","useState","Modal","Button","Form","FormGroup","Input","makeStyles","apiKey","entryPoint","useStyles","theme","potterHeader","backgroundColor","color","save","border","getCharactersFromHouse","house","response","method","url","data","e","console","log","PotterCard","props","classes","undefined","setData","setHouse","id","setId","reset","setReset","hidden","setHidden","fetchData","res","Math","floor","random","length","content","textAlign","marginLeft","marginRight","marginTop","name","school","bloodStatus","species","modal","setModal","modalHouse","setModalHouse","toggle","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PotterIcon from \"@material-ui/icons/FlashOn\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, {useEffect, useState} from \"react\";\nimport { Modal } from 'react-bootstrap';\nimport { Button, Form, FormGroup, Input} from 'reactstrap';\nimport {makeStyles} from \"@material-ui/core\";\n\nconst apiKey = \"$2a$10$ShDxgu/CAJZd/j01jcAxs.7bKZy4/aeJ4fH.Z.Ss4gc0s/wYZ5hku\";\nconst entryPoint = \"https://www.potterapi.com/v1/\";\n\nconst useStyles = makeStyles(theme => ({\n    potterHeader: {\n        backgroundColor: \"#4ed64a\",\n        color: \"#FFFFFF\"\n    },\n    save: {\n        backgroundColor: \"#12ACDE\",\n        border: \"#12ACDE\",\n        color: \"#FFFFFF\",\n        \"&:hover\": {\n            backgroundColor: \"#0F91BC\"\n        }\n    },\n}));\n\nconst getCharactersFromHouse = async (house) => {\n    try {\n        const response =  await axios ({\n            method: 'GET',\n            url: entryPoint + 'characters?house=' + house + '&key=' + apiKey,\n        })\n        return response.data;\n    }\n    catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst PotterCard = (props) => {\n    const classes = useStyles();\n    const [data, setData] = useState(undefined);\n    const [house, setHouse] = useState(\"Hufflepuff\");\n    const [id, setId] = useState(0);\n    const [reset, setReset] = useState(0);\n    const [hidden, setHidden] = useState(null);\n\n    useEffect(\n        () => {\n            async function fetchData() {\n                let res = await getCharactersFromHouse(house);\n                setData(res);\n                setId(Math.floor(Math.random() * res.length));\n            }\n\n            fetchData();\n        }, [house, reset]);\n\n    const content = (data) => {\n        if (data === undefined) {\n            return (\n                <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                    <h4>Loading</h4>\n                </div>\n            );\n        } else {\n            let name = data[id].name;\n            let house = data[id].house;\n            let school = data[id].school;\n            let bloodStatus = data[id].bloodStatus;\n            let species = data[id].species;\n            return (\n                <div>\n                    <Grid container spacing={2}>\n                        <Grid item xs={10}>\n                            <Typography variant=\"h6\">\n                                {name}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <IconButton onClick={() => {\n                                setReset(reset + 1)\n                            }}>\n                                <LoopIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                Species : {species}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                Blood Status : {bloodStatus}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                School : {school}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                House : {house}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        }\n    };\n\n    const [modal, setModal] = useState(true);\n    const [modalHouse, setModalHouse] = useState(\"Hufflepuff\");\n\n    const toggle = () => setModal(!modal);\n\n    if (hidden === \"hidden\") {\n        return (<Card hidden>Nasa</Card>);\n    } else {\n        return (\n            <Card>\n                <Modal show={modal} onHide={toggle} centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Choose a house</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <FormGroup>\n                                <label>Houses</label>\n                                <Input type=\"select\" onChange={e => setModalHouse(e.target.value)}>\n                                    <option selected={house === \"Hufflepuff\"}>Hufflepuff</option>\n                                    <option selected={house === \"Ravenclaw\"}>Ravenclaw</option>\n                                    <option selected={house === \"Gryffindor\"}>Gryffindor</option>\n                                    <option selected={house === \"Slytherin\"}>Slytherin</option>\n                                </Input>\n                            </FormGroup>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className={classes.save} onClick={() => {\n                            setHouse(modalHouse);\n                            toggle()\n                        }}>Save</Button>\n                    </Modal.Footer>\n                </Modal>\n                <Toolbar position=\"static\" className={classes.potterHeader}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={2}>\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                                <PotterIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={8}>\n                            <div style={{marginTop: \"10px\"}}>\n                                <Typography style={{textAlign: \"center\"}} variant=\"h5\">\n                                    Harry Potter\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton color=\"inherit\" aria-label=\"menu\" onClick={toggle}>\n                                <SettingsIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton color=\"inherit\" aria-label=\"menu\" onClick={() => setHidden(\"hidden\")}>\n                                <DeleteIcon/>\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n                <CardContent>\n                    {content(data)}\n                </CardContent>\n            </Card>\n        );\n    }\n};\n\nexport default PotterCard;"]},"metadata":{},"sourceType":"module"}