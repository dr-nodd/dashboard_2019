{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/nasa.js\";\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { Image, Modal } from \"react-bootstrap\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nconst useStyles = makeStyles(theme => ({\n  nasaHeader: {\n    backgroundColor: \"#FFA500\",\n    color: \"#FFFFFF\"\n  },\n  nasaConfig: {\n    align: \"right\"\n  }\n}));\n\nconst getNasaDailyImg = async () => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: 'https://api.nasa.gov/planetary/apod?api_key=pANfIB5rv8J2nbFIbpNfua8WgGYtpQ8BEa8fsZXk'\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst getMarsImgFromRover = async (rover, sol) => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: 'https://api.nasa.gov/mars-photos/api/v1/rovers/' + rover + '/photos?sol=' + sol + '&api_key=pANfIB5rv8J2nbFIbpNfua8WgGYtpQ8BEa8fsZXk'\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst NasaCard = props => {\n  const classes = useStyles();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(undefined),\n        _useState4 = _slicedToArray(_useState3, 2),\n        sol = _useState4[0],\n        setSol = _useState4[1];\n\n  const _useState5 = useState(props.param),\n        _useState6 = _slicedToArray(_useState5, 2),\n        Param = _useState6[0],\n        setParam = _useState6[1];\n\n  const _useState7 = useState(props.rover),\n        _useState8 = _slicedToArray(_useState7, 2),\n        Rover = _useState8[0],\n        setRover = _useState8[1];\n\n  const _useState9 = useState(\"random\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        modalParam = _useState10[0],\n        setModalParam = _useState10[1];\n\n  const _useState11 = useState(\"Spirit\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        modalRover = _useState12[0],\n        setModalRover = _useState12[1];\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        reset = _useState14[0],\n        setReset = _useState14[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let tmp = await getMarsImgFromRover(Rover, 1);\n      let sol;\n      if (Param === \"random\") sol = Math.floor(Math.random() * tmp.photos[0].rover.max_sol) + 1;else sol = tmp.photos[0].rover.max_sol;\n      let res = await getMarsImgFromRover(Rover, sol);\n      setData(res);\n      setSol(sol);\n    }\n\n    fetchData();\n  }, [Param, Rover, reset]);\n\n  const content = data => {\n    if (data === undefined) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"15px\",\n          marginRight: \"15px\",\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      if (data.photos[0] !== undefined) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, data.photos[0].rover.name)), React.createElement(Grid, {\n          item: true,\n          xs: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          onClick: () => {\n            setReset(reset + 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(LoopIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: data.photos[0].img_src,\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        })), React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          style: {\n            textAlign: \"center\",\n            marginLeft: \"15px\",\n            marginRight: \"15px\",\n            marginTop: \"15px\"\n          },\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Picture was taken on \", data.photos[0].earth_date, \" (sol : \", sol, \") by the \", data.photos[0].camera.full_name))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, Rover)), React.createElement(Grid, {\n          item: true,\n          xs: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          onClick: () => {\n            setReset(reset + 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(LoopIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          style: {\n            textAlign: \"center\",\n            marginLeft: \"15px\",\n            marginRight: \"15px\",\n            marginTop: \"15px\"\n          },\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"No picture was taken on sol \", sol, \" by \", Rover))));\n      }\n    }\n  };\n\n  const _useState15 = useState(true),\n        _useState16 = _slicedToArray(_useState15, 2),\n        modal = _useState16[0],\n        setModal = _useState16[1];\n\n  const toggle = () => setModal(!modal);\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    show: modal,\n    onHide: toggle,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Params\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Rover\"), React.createElement(Input, {\n    type: \"select\",\n    onChange: e => setModalRover(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    selected: Rover === \"Opportunity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Opportunity\"), React.createElement(\"option\", {\n    selected: Rover === \"Curiosity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Curiosity\"), React.createElement(\"option\", {\n    selected: Rover === \"Spirit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Spirit\"))))), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Param\"), React.createElement(Input, {\n    type: \"select\",\n    onChange: e => setModalParam(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    selected: Param === \"last\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"last\"), React.createElement(\"option\", {\n    selected: Param === \"random\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"random\"))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.save,\n    onClick: () => {\n      setRover(modalRover);\n      setParam(modalParam);\n      toggle();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(Toolbar, {\n    position: \"static\",\n    className: classes.nasaHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(DashboardIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginTop: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      textAlign: \"center\"\n    },\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Nasa\"))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(SettingsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }))))), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, content(data)));\n};\n\nexport default NasaCard;","map":{"version":3,"sources":["/dashboard/src/widgets/nasa.js"],"names":["axios","Card","Toolbar","IconButton","DashboardIcon","SettingsIcon","DeleteIcon","Typography","CardContent","React","useEffect","useState","Image","Modal","makeStyles","Grid","Button","Form","FormGroup","Input","LoopIcon","useStyles","theme","nasaHeader","backgroundColor","color","nasaConfig","align","getNasaDailyImg","response","method","url","data","e","console","log","getMarsImgFromRover","rover","sol","NasaCard","props","classes","undefined","setData","setSol","param","Param","setParam","Rover","setRover","modalParam","setModalParam","modalRover","setModalRover","reset","setReset","fetchData","tmp","Math","floor","random","photos","max_sol","res","content","textAlign","marginLeft","marginRight","marginTop","name","img_src","earth_date","camera","full_name","modal","setModal","toggle","target","value","save"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,KAAR,EAAeC,KAAf,QAA2B,iBAA3B;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,KAAjC,QAA6C,YAA7C;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,KAAK,KAAK;AACnCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,eAAe,EAAE,SADT;AAERC,IAAAA,KAAK,EAAE;AAFC,GADuB;AAKnCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG;AALuB,CAAL,CAAN,CAA5B;;AAUA,MAAMC,eAAe,GAAG,YAAY;AAChC,MAAI;AACA,UAAMC,QAAQ,GAAI,MAAM7B,KAAK,CAAE;AAC3B8B,MAAAA,MAAM,EAAE,KADmB;AAE3BC,MAAAA,GAAG,EAAE;AAFsB,KAAF,CAA7B;AAIA,WAAOF,QAAQ,CAACG,IAAhB;AACH,GAND,CAOA,OAAOC,CAAP,EAAU;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,CAAvB;AACH;AACJ,CAXD;;AAaA,MAAMG,mBAAmB,GAAG,OAAOC,KAAP,EAAcC,GAAd,KAAsB;AAC9C,MAAI;AACA,UAAMT,QAAQ,GAAG,MAAM7B,KAAK,CAAC;AACzB8B,MAAAA,MAAM,EAAE,KADiB;AAEzBC,MAAAA,GAAG,EAAE,oDAAoDM,KAApD,GAA4D,cAA5D,GAA6EC,GAA7E,GAAmF;AAF/D,KAAD,CAA5B;AAIA,WAAOT,QAAQ,CAACG,IAAhB;AACH,GAND,CAME,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,CAAvB;AACH;AACJ,CAVD;;AAYA,MAAMM,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;;AADwB,oBAEAV,QAAQ,CAAC+B,SAAD,CAFR;AAAA;AAAA,QAEjBV,IAFiB;AAAA,QAEXW,OAFW;;AAAA,qBAGFhC,QAAQ,CAAC+B,SAAD,CAHN;AAAA;AAAA,QAGjBJ,GAHiB;AAAA,QAGZM,MAHY;;AAAA,qBAIEjC,QAAQ,CAAC6B,KAAK,CAACK,KAAP,CAJV;AAAA;AAAA,QAIjBC,KAJiB;AAAA,QAIVC,QAJU;;AAAA,qBAKEpC,QAAQ,CAAC6B,KAAK,CAACH,KAAP,CALV;AAAA;AAAA,QAKjBW,KALiB;AAAA,QAKVC,QALU;;AAAA,qBAMYtC,QAAQ,CAAC,QAAD,CANpB;AAAA;AAAA,QAMjBuC,UANiB;AAAA,QAMLC,aANK;;AAAA,sBAOYxC,QAAQ,CAAC,QAAD,CAPpB;AAAA;AAAA,QAOjByC,UAPiB;AAAA,QAOLC,aAPK;;AAAA,sBAQE1C,QAAQ,CAAC,CAAD,CARV;AAAA;AAAA,QAQjB2C,KARiB;AAAA,QAQVC,QARU;;AAUxB7C,EAAAA,SAAS,CACL,MAAM;AAAE,mBAAe8C,SAAf,GAA2B;AAC/B,UAAIC,GAAG,GAAG,MAAMrB,mBAAmB,CAACY,KAAD,EAAQ,CAAR,CAAnC;AACA,UAAIV,GAAJ;AACA,UAAIQ,KAAK,KAAK,QAAd,EACIR,GAAG,GAAGoB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAAG,CAACI,MAAJ,CAAW,CAAX,EAAcxB,KAAd,CAAoByB,OAA/C,IAA0D,CAAhE,CADJ,KAGIxB,GAAG,GAAGmB,GAAG,CAACI,MAAJ,CAAW,CAAX,EAAcxB,KAAd,CAAoByB,OAA1B;AACJ,UAAIC,GAAG,GAAG,MAAM3B,mBAAmB,CAACY,KAAD,EAAQV,GAAR,CAAnC;AACAK,MAAAA,OAAO,CAACoB,GAAD,CAAP;AACAnB,MAAAA,MAAM,CAACN,GAAD,CAAN;AACH;;AACDkB,IAAAA,SAAS;AACZ,GAbQ,EAaN,CAACV,KAAD,EAAQE,KAAR,EAAeM,KAAf,CAbM,CAAT;;AAeA,QAAMU,OAAO,GAAIhC,IAAD,IAAU;AACtB,QAAIA,IAAI,KAAKU,SAAb,EAAwB;AACpB,aACI;AAAK,QAAA,KAAK,EAAE;AAACuB,UAAAA,SAAS,EAAE,QAAZ;AAAsBC,UAAAA,UAAU,EAAE,MAAlC;AAA0CC,UAAAA,WAAW,EAAE,MAAvD;AAA+DC,UAAAA,SAAS,EAAE;AAA1E,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ;AAKH,KAND,MAMO;AACH,UAAIpC,IAAI,CAAC6B,MAAL,CAAY,CAAZ,MAAmBnB,SAAvB,EAAkC;AAC9B,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKV,IAAI,CAAC6B,MAAL,CAAY,CAAZ,EAAexB,KAAf,CAAqBgC,IAD1B,CADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAM;AAACd,YAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAAoB,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,CANJ,EAWI,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAoB,UAAA,KAAK,EAAE;AAACW,YAAAA,SAAS,EAAE;AAAZ,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEjC,IAAI,CAAC6B,MAAL,CAAY,CAAZ,EAAeS,OAA3B;AAAoC,UAAA,KAAK,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAXJ,EAcI,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAa,UAAA,KAAK,EAAE;AAACL,YAAAA,SAAS,EAAE,QAAZ;AAAsBC,YAAAA,UAAU,EAAE,MAAlC;AAA0CC,YAAAA,WAAW,EAAE,MAAvD;AAA+DC,YAAAA,SAAS,EAAE;AAA1E,WAApB;AAAuG,UAAA,OAAO,EAAC,OAA/G;AAAuH,UAAA,KAAK,EAAC,eAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAC0BpC,IAAI,CAAC6B,MAAL,CAAY,CAAZ,EAAeU,UADzC,cAC6DjC,GAD7D,eAC2EN,IAAI,CAAC6B,MAAL,CAAY,CAAZ,EAAeW,MAAf,CAAsBC,SADjG,CADJ,CAdJ,CADJ,CADJ;AAwBH,OAzBD,MAyBO;AACH,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKzB,KADL,CADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAM;AAACO,YAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAAoB,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,CANJ,EAWI,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAa,UAAA,KAAK,EAAE;AAACW,YAAAA,SAAS,EAAE,QAAZ;AAAsBC,YAAAA,UAAU,EAAE,MAAlC;AAA0CC,YAAAA,WAAW,EAAE,MAAvD;AAA+DC,YAAAA,SAAS,EAAE;AAA1E,WAApB;AAAuG,UAAA,OAAO,EAAC,OAA/G;AAAuH,UAAA,KAAK,EAAC,eAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACiC9B,GADjC,UAC0CU,KAD1C,CADJ,CAXJ,CADJ,CADJ;AAqBH;AACJ;AACJ,GAzDD;;AAzBwB,sBAoFErC,QAAQ,CAAC,IAAD,CApFV;AAAA;AAAA,QAoFjB+D,KApFiB;AAAA,QAoFVC,QApFU;;AAsFxB,QAAMC,MAAM,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,KAAb;AAAoB,IAAA,MAAM,EAAEE,MAA5B;AAAoC,IAAA,QAAQ,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,EAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEQ,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,QAAQ,EAAE3C,CAAC,IAAIoB,aAAa,CAACpB,CAAC,CAAC4C,MAAF,CAASC,KAAV,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,QAAQ,EAAE9B,KAAK,KAAK,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAQ,IAAA,QAAQ,EAAEA,KAAK,KAAK,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAQ,IAAA,QAAQ,EAAEA,KAAK,KAAK,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CAFR,CADJ,CADJ,CAJJ,EAgBI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,QAAQ,EAAEf,CAAC,IAAIkB,aAAa,CAAClB,CAAC,CAAC4C,MAAF,CAASC,KAAV,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,QAAQ,EAAEhC,KAAK,KAAK,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAQ,IAAA,QAAQ,EAAEA,KAAK,KAAK,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAFJ,CADJ,CADJ,CAhBJ,EA2BI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEL,OAAO,CAACsC,IAA3B;AAAiC,IAAA,OAAO,EAAE,MAAM;AAAC9B,MAAAA,QAAQ,CAACG,UAAD,CAAR;AAAsBL,MAAAA,QAAQ,CAACG,UAAD,CAAR;AAAsB0B,MAAAA,MAAM;AAAG,KAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CA3BJ,CADJ,EAgCI,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEnC,OAAO,CAAClB,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAyC,kBAAW,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAAC6C,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAACH,MAAAA,SAAS,EAAE;AAAZ,KAAnB;AAA0C,IAAA,OAAO,EAAC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,CANJ,EAaI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,kBAAW,MAAvC;AAA+C,IAAA,OAAO,EAAEW,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAbJ,EAkBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,kBAAW,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAlBJ,CADJ,CAhCJ,EA0DI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,OAAO,CAAChC,IAAD,CADZ,CA1DJ,CADJ;AAgEH,CAxJD;;AA0JA,eAAeO,QAAf","sourcesContent":["import axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, {useEffect, useState} from \"react\";\nimport {Image, Modal} from \"react-bootstrap\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button, Form, FormGroup, Input} from \"reactstrap\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\n\nconst useStyles = makeStyles(theme => ({\n    nasaHeader: {\n        backgroundColor: \"#FFA500\",\n        color: \"#FFFFFF\"\n    },\n    nasaConfig: {\n      align: \"right\",\n    },\n}));\n\nconst getNasaDailyImg = async () => {\n    try {\n        const response =  await axios ({\n            method: 'GET',\n            url: 'https://api.nasa.gov/planetary/apod?api_key=pANfIB5rv8J2nbFIbpNfua8WgGYtpQ8BEa8fsZXk',\n        })\n        return response.data;\n    }\n    catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst getMarsImgFromRover = async (rover, sol) => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: 'https://api.nasa.gov/mars-photos/api/v1/rovers/' + rover + '/photos?sol=' + sol + '&api_key=pANfIB5rv8J2nbFIbpNfua8WgGYtpQ8BEa8fsZXk',\n        });\n        return response.data;\n    } catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst NasaCard = (props) => {\n    const classes = useStyles();\n    const [data, setData] = useState(undefined);\n    const [sol, setSol] = useState(undefined);\n    const [Param, setParam] = useState(props.param);\n    const [Rover, setRover] = useState(props.rover);\n    const [modalParam, setModalParam] = useState(\"random\");\n    const [modalRover, setModalRover] = useState(\"Spirit\");\n    const [reset, setReset] = useState(0);\n\n    useEffect(\n        () => { async function fetchData() {\n            let tmp = await getMarsImgFromRover(Rover, 1);\n            let sol;\n            if (Param === \"random\")\n                sol = Math.floor(Math.random() * tmp.photos[0].rover.max_sol) + 1;\n            else\n                sol = tmp.photos[0].rover.max_sol;\n            let res = await getMarsImgFromRover(Rover, sol);\n            setData(res);\n            setSol(sol);\n        }\n        fetchData();\n    }, [Param, Rover, reset]);\n\n    const content = (data) => {\n        if (data === undefined) {\n            return (\n                <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                    <h4>Loading</h4>\n                </div>\n            );\n        } else {\n            if (data.photos[0] !== undefined) {\n                return (\n                    <div>\n                        <Grid container spacing={2}>\n                            <Grid item xs={10}>\n                                <Typography gutterBottom variant=\"h6\">\n                                    {data.photos[0].rover.name}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={2}>\n                                <IconButton onClick={() => {setReset(reset + 1)}}>\n                                    <LoopIcon/>\n                                </IconButton>\n                            </Grid>\n                            <Grid item xs={12}  style={{textAlign: \"center\"}}>\n                                <Image src={data.photos[0].img_src} fluid/>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography  style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}} variant=\"body2\" color=\"textSecondary\">\n                                    Picture was taken on {data.photos[0].earth_date} (sol : {sol}) by the {data.photos[0].camera.full_name}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <Grid container spacing={2}>\n                            <Grid item xs={10}>\n                                <Typography gutterBottom variant=\"h6\">\n                                    {Rover}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={2}>\n                                <IconButton onClick={() => {setReset(reset + 1)}}>\n                                    <LoopIcon/>\n                                </IconButton>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography  style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}} variant=\"body2\" color=\"textSecondary\">\n                                    No picture was taken on sol {sol} by {Rover}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                );\n            }\n        }\n    };\n\n    const [modal, setModal] = useState(true);\n\n    const toggle = () => setModal(!modal);\n\n    return (\n        <Card>\n            <Modal show={modal} onHide={toggle} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Params</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <FormGroup>\n                            <label>Rover</label>\n                                <Input type=\"select\" onChange={e => setModalRover(e.target.value)}>\n                                    <option selected={Rover === \"Opportunity\"}>Opportunity</option>\n                                    <option selected={Rover === \"Curiosity\"}>Curiosity</option>\n                                    <option selected={Rover === \"Spirit\"}>Spirit</option>\n                                </Input>\n                        </FormGroup>\n                    </Form>\n                </Modal.Body>\n                <Modal.Body>\n                    <Form>\n                        <FormGroup>\n                            <label>Param</label>\n                            <Input type=\"select\" onChange={e => setModalParam(e.target.value)}>\n                                <option selected={Param === \"last\"}>last</option>\n                                <option selected={Param === \"random\"}>random</option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button className={classes.save} onClick={() => {setRover(modalRover); setParam(modalParam); toggle()}}>Save</Button>\n                </Modal.Footer>\n            </Modal>\n            <Toolbar position=\"static\" className={classes.nasaHeader}>\n                <Grid container spacing={1}>\n                    <Grid item xs={2}>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <DashboardIcon/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <div style={{marginTop: \"10px\"}}>\n                            <Typography style={{textAlign: \"center\"}} variant=\"h5\">\n                                Nasa\n                            </Typography>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <IconButton color=\"inherit\" aria-label=\"menu\"  onClick={toggle}>\n                            <SettingsIcon/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <IconButton color=\"inherit\" aria-label=\"menu\">\n                            <DeleteIcon/>\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n            <CardContent>\n                {content(data)}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default NasaCard;"]},"metadata":{},"sourceType":"module"}