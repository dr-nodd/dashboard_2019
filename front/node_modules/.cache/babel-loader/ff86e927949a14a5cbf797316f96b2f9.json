{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/accuWeather.js\";\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal } from 'react-bootstrap';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport { makeStyles } from \"@material-ui/core\";\nimport { Image } from \"react-bootstrap\";\nconst apiKey = \"3cLQtZD1ekZ0pnWKYCZ5JMGqrp3BGAVQ\";\nconst entryPoint = \"http://dataservice.accuweather.com/\";\nconst useStyles = makeStyles(theme => ({\n  weatherHeader: {\n    backgroundColor: \"#e6005c\",\n    color: \"#FFFFFF\"\n  },\n  save: {\n    backgroundColor: \"#12ACDE\",\n    border: \"#12ACDE\",\n    color: \"#FFFFFF\",\n    \"&:hover\": {\n      backgroundColor: \"#0F91BC\"\n    }\n  }\n}));\n\nconst getLocationKey = async city => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: entryPoint + 'locations/v1/cities/search?q=' + city + '&apikey=' + apiKey\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst getInfoFromLocation = async locationKey => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: entryPoint + 'forecasts/v1/daily/1day/' + locationKey + '?apikey=' + apiKey\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst AccuWeatherCard = props => {\n  const classes = useStyles();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(props.city),\n        _useState4 = _slicedToArray(_useState3, 2),\n        city = _useState4[0],\n        setCity = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        hidden = _useState6[0],\n        setHidden = _useState6[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let location = await getLocationKey(city);\n\n      if (location !== undefined) {\n        var res = null;\n\n        if (location[0] !== undefined) {\n          res = await getInfoFromLocation(location[0].Key);\n        } else {\n          setCity(\"Lille\");\n          res = await getInfoFromLocation(135564);\n        }\n\n        setData(res);\n      }\n    }\n\n    fetchData();\n  }, [city]);\n\n  const content = data => {\n    if (data === undefined) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"15px\",\n          marginRight: \"15px\",\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      let date = data.DailyForecasts[0].Date.split('T')[0];\n      let gmt = data.DailyForecasts[0].Date.split(\":00:00\")[1];\n      let maxTemp = ((parseInt(data.DailyForecasts[0].Temperature.Maximum.Value, 10) - 32) * (5 / 9)).toFixed();\n      let minTemp = ((parseInt(data.DailyForecasts[0].Temperature.Minimum.Value, 10) - 32) * (5 / 9)).toFixed();\n      var dailyIcon = \"\";\n      var nightlyIcon = \"\";\n      if (data.DailyForecasts[0].Day.Icon < 10) dailyIcon = \"https://developer.accuweather.com/sites/default/files/0\" + data.DailyForecasts[0].Day.Icon + \"-s.png\";else dailyIcon = \"https://developer.accuweather.com/sites/default/files/\" + data.DailyForecasts[0].Day.Icon + \"-s.png\";\n      if (data.DailyForecasts[0].Night.Icon < 10) nightlyIcon = \"https://developer.accuweather.com/sites/default/files/0\" + data.DailyForecasts[0].Night.Icon + \"-s.png\";else nightlyIcon = \"https://developer.accuweather.com/sites/default/files/\" + data.DailyForecasts[0].Night.Icon + \"-s.png\";\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, city), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, date), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"GMT : \", gmt)), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Max : \", maxTemp, \" \\xB0C\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), \"Min : \", minTemp, \" \\xB0C\")), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Day\"), React.createElement(Image, {\n        src: dailyIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Night\"), React.createElement(Image, {\n        src: nightlyIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }))));\n    }\n  };\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        modal = _useState8[0],\n        setModal = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        myText = _useState10[0],\n        setMyText = _useState10[1];\n\n  const toggle = () => setModal(!modal);\n\n  if (hidden === \"hidden\") {\n    return React.createElement(Card, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Nasa\");\n  } else {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: modal,\n      onHide: toggle,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Choose a city\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: e => setMyText(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.save,\n      onClick: () => {\n        setCity(myText);\n        toggle();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Toolbar, {\n      position: \"static\",\n      className: classes.weatherHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: {\n        textAlign: \"center\"\n      },\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"AccuWeather\"))), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: () => setHidden(\"hidden\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }))))), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, content(data)));\n  }\n};\n\nexport default AccuWeatherCard;","map":{"version":3,"sources":["/dashboard/src/widgets/accuWeather.js"],"names":["axios","Card","Grid","Toolbar","IconButton","DashboardIcon","SettingsIcon","DeleteIcon","Typography","CardContent","React","useEffect","useState","Modal","Button","Form","FormGroup","Input","makeStyles","Image","apiKey","entryPoint","useStyles","theme","weatherHeader","backgroundColor","color","save","border","getLocationKey","city","response","method","url","data","e","console","log","getInfoFromLocation","locationKey","AccuWeatherCard","props","classes","undefined","setData","setCity","hidden","setHidden","fetchData","location","res","Key","content","textAlign","marginLeft","marginRight","marginTop","date","DailyForecasts","Date","split","gmt","maxTemp","parseInt","Temperature","Maximum","Value","toFixed","minTemp","Minimum","dailyIcon","nightlyIcon","Day","Icon","Night","modal","setModal","myText","setMyText","toggle","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, {useEffect, useState} from \"react\";\nimport { Modal } from 'react-bootstrap';\nimport { Button, Form, FormGroup, Input} from 'reactstrap';\nimport {makeStyles} from \"@material-ui/core\";\nimport {Image} from \"react-bootstrap\";\n\nconst apiKey = \"3cLQtZD1ekZ0pnWKYCZ5JMGqrp3BGAVQ\";\nconst entryPoint = \"http://dataservice.accuweather.com/\";\n\nconst useStyles = makeStyles(theme => ({\n    weatherHeader: {\n        backgroundColor: \"#e6005c\",\n        color: \"#FFFFFF\"\n    },\n    save: {\n        backgroundColor: \"#12ACDE\",\n        border: \"#12ACDE\",\n        color: \"#FFFFFF\",\n        \"&:hover\": {\n            backgroundColor: \"#0F91BC\"\n        }\n    },\n}));\n\nconst getLocationKey = async (city) => {\n    try {\n        const response =  await axios ({\n            method: 'GET',\n            url: entryPoint + 'locations/v1/cities/search?q=' + city + '&apikey=' + apiKey,\n        })\n        return response.data;\n    }\n    catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst getInfoFromLocation = async (locationKey) => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: entryPoint + 'forecasts/v1/daily/1day/' + locationKey + '?apikey=' + apiKey,\n        });\n        return response.data;\n    } catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst AccuWeatherCard = (props) => {\n    const classes = useStyles();\n    const [data, setData] = useState(undefined);\n    const [city, setCity] = useState(props.city);\n    const [hidden, setHidden] = useState(null);\n\n    useEffect(\n        () => { async function fetchData() {\n            let location = await getLocationKey(city);\n            if (location !== undefined) {\n                var res = null;\n                if (location[0] !== undefined) {\n                    res = await getInfoFromLocation(location[0].Key);\n                } else {\n                    setCity(\"Lille\");\n                    res = await getInfoFromLocation(135564);\n                }\n                setData(res);\n            }\n        }\n        fetchData();\n    }, [city]);\n\n    const content = (data) => {\n        if (data === undefined) {\n            return (\n                <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                    <h4>Loading</h4>\n                </div>\n            );\n        } else {\n            let date = data.DailyForecasts[0].Date.split('T')[0];\n            let gmt = data.DailyForecasts[0].Date.split(\":00:00\")[1];\n            let maxTemp = ((parseInt(data.DailyForecasts[0].Temperature.Maximum.Value, 10) - 32) * (5/9)).toFixed();\n            let minTemp = ((parseInt(data.DailyForecasts[0].Temperature.Minimum.Value, 10) - 32) * (5/9)).toFixed();\n            var dailyIcon = \"\";\n            var nightlyIcon = \"\";\n            if (data.DailyForecasts[0].Day.Icon < 10)\n                dailyIcon = \"https://developer.accuweather.com/sites/default/files/0\" + data.DailyForecasts[0].Day.Icon + \"-s.png\";\n            else\n                dailyIcon = \"https://developer.accuweather.com/sites/default/files/\" + data.DailyForecasts[0].Day.Icon + \"-s.png\";\n            if (data.DailyForecasts[0].Night.Icon < 10)\n                nightlyIcon = \"https://developer.accuweather.com/sites/default/files/0\" + data.DailyForecasts[0].Night.Icon + \"-s.png\";\n            else\n                nightlyIcon = \"https://developer.accuweather.com/sites/default/files/\" + data.DailyForecasts[0].Night.Icon + \"-s.png\";\n\n            return (\n                <div>\n                    <Grid container spacing={2}>\n                        <Grid item xs={10}>\n                            <Typography gutterBottom variant=\"h6\">\n                                {city}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {date}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                GMT : {gmt}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={2} style={{textAlign: \"center\"}}>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                Max : {maxTemp} °C<br/>\n                                Min : {minTemp} °C\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                Day\n                            </Typography>\n                            <Image src={dailyIcon}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                Night\n                            </Typography>\n                            <Image src={nightlyIcon}/>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        }\n    };\n\n    const [modal, setModal] = useState(true);\n    const [myText, setMyText] = useState(null);\n\n    const toggle = () => setModal(!modal);\n\n    if (hidden === \"hidden\") {\n        return (<Card hidden>Nasa</Card>);\n    } else {\n        return (\n            <Card>\n                <Modal show={modal} onHide={toggle} centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Choose a city</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <FormGroup>\n                                <Input onChange={e => setMyText(e.target.value)}/>\n                            </FormGroup>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className={classes.save} onClick={() => {\n                            setCity(myText);\n                            toggle()\n                        }}>Save</Button>\n                    </Modal.Footer>\n                </Modal>\n                <Toolbar position=\"static\" className={classes.weatherHeader}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={2}>\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                                <DashboardIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={8}>\n                            <div style={{marginTop: \"10px\"}}>\n                                <Typography style={{textAlign: \"center\"}} variant=\"h5\">\n                                    AccuWeather\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton color=\"inherit\" aria-label=\"menu\" onClick={toggle}>\n                                <SettingsIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton color=\"inherit\" aria-label=\"menu\" onClick={() => setHidden(\"hidden\")}>\n                                <DeleteIcon/>\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n                <CardContent>\n                    {content(data)}\n                </CardContent>\n            </Card>\n        );\n    }\n};\n\nexport default AccuWeatherCard;"]},"metadata":{},"sourceType":"module"}