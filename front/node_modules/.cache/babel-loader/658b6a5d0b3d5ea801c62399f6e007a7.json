{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/nasa.js\";\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { Image } from \"react-bootstrap\";\n\nconst getNasaDailyImg = async () => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: 'https://api.nasa.gov/planetary/apod?api_key=pANfIB5rv8J2nbFIbpNfua8WgGYtpQ8BEa8fsZXk'\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst getMarsImgFromRover = async (rover, sol) => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: 'https://api.nasa.gov/mars-photos/api/v1/rovers/' + rover + '/photos?sol=' + sol + '&api_key=pANfIB5rv8J2nbFIbpNfua8WgGYtpQ8BEa8fsZXk'\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst NasaCard = props => {\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(undefined),\n        _useState4 = _slicedToArray(_useState3, 2),\n        sol = _useState4[0],\n        setSol = _useState4[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let tmp = await getMarsImgFromRover(props.rover, 1);\n      let sol;\n      if (props.param === \"random\") sol = Math.floor(Math.random() * tmp.photos[0].rover.max_sol) + 1;else sol = tmp.photos[0].rover.max_sol;\n      let res = await getMarsImgFromRover(props.rover, sol);\n      setData(res);\n      setSol(sol);\n    }\n\n    fetchData();\n  }, [props.param, props.rover]);\n\n  const content = data => {\n    if (data === undefined) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"15px\",\n          marginRight: \"15px\",\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      if (data.photos[0] !== undefined) {\n        return React.createElement(\"div\", {\n          style: {\n            textAlign: \"center\",\n            marginLeft: \"15px\",\n            marginRight: \"15px\",\n            marginTop: \"15px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: data.photos[0].img_src,\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, data.photos[0].rover.name), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Picture was taken on \", data.photos[0].earth_date, \" (sol : \", sol, \") by the \", data.photos[0].camera.full_name));\n      } else {\n        return React.createElement(\"div\", {\n          style: {\n            textAlign: \"center\",\n            marginLeft: \"15px\",\n            marginRight: \"15px\",\n            marginTop: \"15px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, props.rover), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"No picture was taken on sol \", sol, \" by \", props.rover));\n      }\n    }\n  };\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(DashboardIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Nasa\"), React.createElement(IconButton, {\n    style: {\n      left: \"50%\"\n    },\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(SettingsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })))), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, content(data)));\n};\n\nexport default NasaCard;","map":{"version":3,"sources":["/dashboard/src/widgets/nasa.js"],"names":["axios","Card","AppBar","Toolbar","IconButton","DashboardIcon","SettingsIcon","Typography","CardContent","React","useEffect","useState","Image","getNasaDailyImg","response","method","url","data","e","console","log","getMarsImgFromRover","rover","sol","NasaCard","props","undefined","setData","setSol","fetchData","tmp","param","Math","floor","random","photos","max_sol","res","content","textAlign","marginLeft","marginRight","marginTop","img_src","name","earth_date","camera","full_name","left"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, {useEffect, useState} from \"react\";\nimport {Image} from \"react-bootstrap\";\n\nconst getNasaDailyImg = async () => {\n    try {\n        const response =  await axios ({\n            method: 'GET',\n            url: 'https://api.nasa.gov/planetary/apod?api_key=pANfIB5rv8J2nbFIbpNfua8WgGYtpQ8BEa8fsZXk',\n        })\n        return response.data;\n    }\n    catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst getMarsImgFromRover = async (rover, sol) => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: 'https://api.nasa.gov/mars-photos/api/v1/rovers/' + rover + '/photos?sol=' + sol + '&api_key=pANfIB5rv8J2nbFIbpNfua8WgGYtpQ8BEa8fsZXk',\n        });\n        return response.data;\n    } catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst NasaCard = (props) => {\n    const [data, setData] = useState(undefined);\n    const [sol, setSol] = useState(undefined);\n\n    useEffect(\n        () => { async function fetchData() {\n            let tmp = await getMarsImgFromRover(props.rover, 1);\n            let sol;\n            if (props.param === \"random\")\n                sol = Math.floor(Math.random() * tmp.photos[0].rover.max_sol) + 1;\n            else\n                sol = tmp.photos[0].rover.max_sol;\n            let res = await getMarsImgFromRover(props.rover, sol);\n            setData(res);\n            setSol(sol);\n        }\n        fetchData();\n    }, [props.param, props.rover]);\n\n    const content = (data) => {\n        if (data === undefined) {\n            return (\n                <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                    <h4>Loading</h4>\n                </div>\n            );\n        } else {\n            if (data.photos[0] !== undefined) {\n                return (\n                    <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                        <Image src={data.photos[0].img_src} fluid/>\n                        <Typography gutterBottom variant=\"h6\">\n                            {data.photos[0].rover.name}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                            Picture was taken on {data.photos[0].earth_date} (sol : {sol}) by the {data.photos[0].camera.full_name}\n                        </Typography>\n                    </div>\n                );\n            } else {\n                return (\n                    <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                        <Typography gutterBottom variant=\"h6\">\n                            {props.rover}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                            No picture was taken on sol {sol} by {props.rover}\n                        </Typography>\n                    </div>\n                );\n            }\n        }\n    };\n\n    return (\n        <Card>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                        <DashboardIcon/>\n                    </IconButton>\n                    <Typography variant=\"h5\">\n                        Nasa\n                    </Typography>\n                    <IconButton style={{left:\"50%\"}} color=\"inherit\" aria-label=\"menu\">\n                        <SettingsIcon/>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <CardContent>\n                {content(data)}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default NasaCard;"]},"metadata":{},"sourceType":"module"}