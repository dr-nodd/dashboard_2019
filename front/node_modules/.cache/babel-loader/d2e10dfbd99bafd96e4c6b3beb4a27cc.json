{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/Quizz.js\";\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal } from 'react-bootstrap';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport { makeStyles } from \"@material-ui/core\";\nimport { Image } from \"react-bootstrap\";\nconst entryPoint = \"https://opentdb.com/api.php?\";\nconst useStyles = makeStyles(theme => ({\n  nasaHeader: {\n    backgroundColor: \"#c51ec5\",\n    color: \"#FFFFFF\"\n  },\n  save: {\n    backgroundColor: \"#12ACDE\",\n    border: \"#12ACDE\",\n    color: \"#FFFFFF\",\n    \"&:hover\": {\n      backgroundColor: \"#0F91BC\"\n    }\n  }\n}));\n\nconst getQuestion = async (difficulty = \"\", category = \"\") => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: entryPoint + 'amount=1&difficulty=' + difficulty + '&category=' + category\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst QuizzCard = props => {\n  const classes = useStyles();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        difficulty = _useState4[0],\n        setDifficulty = _useState4[1];\n\n  const _useState5 = useState(\"Click on me if you want a clue !\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        clue = _useState6[0],\n        setClue = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        category = _useState8[0],\n        setCategory = _useState8[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let res = await getQuestion(difficulty, category);\n      setData(res);\n    }\n\n    fetchData();\n  }, [difficulty, category]);\n\n  const content = data => {\n    if (data === undefined) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"15px\",\n          marginRight: \"15px\",\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      let theme = data.results[0].category;\n      let diff = data.results[0].difficulty;\n      let type = data.results[0].type;\n      let question = data.results[0].question;\n      let clue_answer = \"You really think that you're getting a clue on a true or false ?\";\n\n      if (type !== \"boolean\") {\n        clue_answer = \"the answer is'nt \" + data.results[0].incorrect_answers[0];\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Category : \", theme, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), \"Difficulty : \", diff)), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, question, \" \", type === \"boolean\" ? \"True or False ?\" : \"\")), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, type === \"boolean\" ? \"True or False ?\" : data.results[0].correct_answer + \"\\n\" + data.results[0].incorrect_answers[1] + \"\\n\" + data.results[0].incorrect_answers[2] + \"\\n\" + data.results[0].incorrect_answers[0]))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        onClick: () => {\n          setClue(clue_answer);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, clue))));\n    }\n  };\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        modal = _useState10[0],\n        setModal = _useState10[1];\n\n  const _useState11 = useState(\"medium\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        modalDifficulty = _useState12[0],\n        setModalDifficulty = _useState12[1];\n\n  const toggle = () => setModal(!modal);\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    show: modal,\n    onHide: toggle,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Choose a house\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Houses\"), React.createElement(Input, {\n    type: \"select\",\n    onChange: e => setModalDifficulty(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    selected: difficulty === \"easy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"easy\"), React.createElement(\"option\", {\n    selected: difficulty === \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"medium\"), React.createElement(\"option\", {\n    selected: difficulty === \"hard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"hard\"))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.save,\n    onClick: () => {\n      setDifficulty(modalDifficulty);\n      toggle();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(Toolbar, {\n    position: \"static\",\n    className: classes.nasaHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(DashboardIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginTop: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      textAlign: \"center\"\n    },\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Quizz\"))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(SettingsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }))))), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, content(data)));\n};\n\nexport default QuizzCard;","map":{"version":3,"sources":["/dashboard/src/widgets/Quizz.js"],"names":["axios","Card","Grid","Toolbar","IconButton","DashboardIcon","SettingsIcon","DeleteIcon","Typography","CardContent","React","useEffect","useState","Modal","Button","Form","FormGroup","Input","makeStyles","Image","entryPoint","useStyles","theme","nasaHeader","backgroundColor","color","save","border","getQuestion","difficulty","category","response","method","url","data","e","console","log","QuizzCard","props","classes","undefined","setData","setDifficulty","clue","setClue","setCategory","fetchData","res","content","textAlign","marginLeft","marginRight","marginTop","results","diff","type","question","clue_answer","incorrect_answers","correct_answer","modal","setModal","modalDifficulty","setModalDifficulty","toggle","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, {useEffect, useState} from \"react\";\nimport { Modal } from 'react-bootstrap';\nimport { Button, Form, FormGroup, Input} from 'reactstrap';\nimport {makeStyles} from \"@material-ui/core\";\nimport {Image} from \"react-bootstrap\";\n\nconst entryPoint = \"https://opentdb.com/api.php?\";\n\nconst useStyles = makeStyles(theme => ({\n    nasaHeader: {\n        backgroundColor: \"#c51ec5\",\n        color: \"#FFFFFF\"\n    },\n    save: {\n        backgroundColor: \"#12ACDE\",\n        border: \"#12ACDE\",\n        color: \"#FFFFFF\",\n        \"&:hover\": {\n            backgroundColor: \"#0F91BC\"\n        }\n    },\n}));\n\nconst getQuestion = async (difficulty=\"\", category=\"\") => {\n    try {\n        const response =  await axios ({\n            method: 'GET',\n            url: entryPoint + 'amount=1&difficulty=' + difficulty + '&category=' + category,\n        })\n        return response.data;\n    }\n    catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst QuizzCard = (props) => {\n    const classes = useStyles();\n    const [data, setData] = useState(undefined);\n    const [difficulty, setDifficulty] = useState(\"\");\n    const [clue, setClue] = useState(\"Click on me if you want a clue !\");\n    const [category, setCategory] = useState(\"\");\n\n    useEffect(\n        () => { async function fetchData() {\n            let res = await getQuestion(difficulty, category);\n            setData(res);\n        }\n            fetchData();\n        }, [difficulty, category]);\n\n    const content = (data) => {\n        if (data === undefined) {\n            return (\n                <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                    <h4>Loading</h4>\n                </div>\n            );\n        } else {\n            let theme = data.results[0].category;\n            let diff = data.results[0].difficulty;\n            let type = data.results[0].type;\n            let question = data.results[0].question;\n            let clue_answer = \"You really think that you're getting a clue on a true or false ?\";\n            if (type !== \"boolean\") {\n                clue_answer = \"the answer is'nt \" + data.results[0].incorrect_answers[0];\n            }\n            return (\n                <div>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                Category : {theme}<br/>Difficulty : {diff}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h6\">\n                                {question} {type === \"boolean\" ? \"True or False ?\" : \"\"}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                <p>\n                                {type === \"boolean\" ? \"True or False ?\" : data.results[0].correct_answer + \"\\n\" + data.results[0].incorrect_answers[1] + \"\\n\" + data.results[0].incorrect_answers[2]+ \"\\n\" + data.results[0].incorrect_answers[0]}\n                                </p>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\" onClick={() => {setClue(clue_answer)}}>\n                                {clue}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        }\n    };\n\n    const [modal, setModal] = useState(false);\n    const [modalDifficulty, setModalDifficulty] = useState(\"medium\");\n\n    const toggle = () => setModal(!modal);\n\n    return (\n        <Card>\n            <Modal show={modal} onHide={toggle} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Choose a house</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <FormGroup>\n                            <label>Houses</label>\n                            <Input type=\"select\" onChange={e => setModalDifficulty(e.target.value)}>\n                                <option selected={difficulty === \"easy\"}>easy</option>\n                                <option selected={difficulty === \"medium\"}>medium</option>\n                                <option selected={difficulty === \"hard\"}>hard</option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button className={classes.save} onClick={() => {setDifficulty(modalDifficulty); toggle()}}>Save</Button>\n                </Modal.Footer>\n            </Modal>\n            <Toolbar position=\"static\" className={classes.nasaHeader}>\n                <Grid container spacing={1}>\n                    <Grid item xs={2}>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <DashboardIcon/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <div style={{marginTop: \"10px\"}}>\n                            <Typography style={{textAlign: \"center\"}} variant=\"h5\">\n                                Quizz\n                            </Typography>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <IconButton color=\"inherit\" aria-label=\"menu\" onClick={toggle}>\n                            <SettingsIcon/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <IconButton color=\"inherit\" aria-label=\"menu\">\n                            <DeleteIcon/>\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n            <CardContent>\n                {content(data)}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default QuizzCard;"]},"metadata":{},"sourceType":"module"}