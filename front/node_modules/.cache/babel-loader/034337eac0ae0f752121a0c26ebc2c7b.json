{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/Exchange.js\";\n// import MetricsGraphics from 'react-metrics-graphics';\n// import 'metrics-graphics/dist/metricsgraphics.css';\n//\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { Image, Modal } from \"react-bootstrap\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nconst useStyles = makeStyles(theme => ({\n  exchangeHeader: {\n    backgroundColor: \"#A0A0A0\",\n    color: \"#FFFFFF\"\n  },\n  exchangeConfig: {\n    align: \"right\"\n  }\n}));\n\nconst getLatestExchangeData = async (base = \"EUR\") => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest?base=' + base\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst getExchangeDataStartEnd = async (base = \"EUR\", start = \"2018-01-01\", end = \"2019-01-01\") => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/history?base=' + base + '&start_at=' + start + '&end_at=' + end\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst ExchangeCard = props => {\n  const classes = useStyles();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(undefined),\n        _useState4 = _slicedToArray(_useState3, 2),\n        sol = _useState4[0],\n        setSol = _useState4[1];\n\n  const _useState5 = useState(props.param),\n        _useState6 = _slicedToArray(_useState5, 2),\n        Param = _useState6[0],\n        setParam = _useState6[1];\n\n  const _useState7 = useState(props.rover),\n        _useState8 = _slicedToArray(_useState7, 2),\n        Rover = _useState8[0],\n        setRover = _useState8[1];\n\n  const _useState9 = useState(\"last\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        modalParam = _useState10[0],\n        setModalParam = _useState10[1];\n\n  const _useState11 = useState(\"Opportunity\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        modalRover = _useState12[0],\n        setModalRover = _useState12[1]; // useEffect(\n  //     () => { async function fetchData() {\n  //         let tmp = await getMarsImgFromRover(Rover, 1);\n  //         let sol;\n  //         if (Param === \"random\")\n  //             sol = Math.floor(Math.random() * tmp.photos[0].rover.max_sol) + 1;\n  //         else\n  //             sol = tmp.photos[0].rover.max_sol;\n  //         let res = await getMarsImgFromRover(Rover, sol);\n  //         setData(res);\n  //         setSol(sol);\n  //     }\n  //         fetchData();\n  //     }, [Param, Rover]);\n\n\n  const content = data => {\n    return React.createElement(MetricsGraphics, {\n      title: \"Downloads\",\n      description: \"This graphic shows a time-series of downloads.\",\n      data: [{\n        'date': new Date('2014-11-01'),\n        'value': 12\n      }, {\n        'date': new Date('2014-11-02'),\n        'value': 18\n      }],\n      width: 600,\n      height: 250,\n      x_accessor: \"date\",\n      y_accessor: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }); // if (data === undefined) {\n    //     return (\n    //         <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n    //             <h4>Loading</h4>\n    //         </div>\n    //     );\n    // } else {\n    //     if (data.photos[0] !== undefined) {\n    //         return (\n    //             <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n    //                 <Image src={data.photos[0].img_src} fluid/>\n    //                 <Typography gutterBottom variant=\"h6\">\n    //                     {data.photos[0].rover.name}\n    //                 </Typography>\n    //                 <Typography variant=\"body2\" color=\"textSecondary\">\n    //                     Picture was taken on {data.photos[0].earth_date} (sol : {sol}) by the {data.photos[0].camera.full_name}\n    //                 </Typography>\n    //             </div>\n    //         );\n    //     } else {\n    //         return (\n    //             <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n    //                 <Typography gutterBottom variant=\"h6\">\n    //                     {Rover}\n    //                 </Typography>\n    //                 <Typography variant=\"body2\" color=\"textSecondary\">\n    //                     No picture was taken on sol {sol} by {Rover}\n    //                 </Typography>\n    //             </div>\n    //         );\n    //     }\n    // }\n  };\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        modal = _useState14[0],\n        setModal = _useState14[1];\n\n  const toggle = () => setModal(!modal);\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    show: modal,\n    onHide: toggle,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Params\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Rover\"), React.createElement(Input, {\n    type: \"select\",\n    onChange: e => setModalRover(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    selected: Rover === \"Opportunity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Opportunity\"), React.createElement(\"option\", {\n    selected: Rover === \"Curiosity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Curiosity\"), React.createElement(\"option\", {\n    selected: Rover === \"Spirit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Spirit\"))))), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Param\"), React.createElement(Input, {\n    type: \"select\",\n    onChange: e => setModalParam(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    selected: Param === \"last\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"last\"), React.createElement(\"option\", {\n    selected: Param === \"random\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"random\"))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.save,\n    onClick: () => {\n      setRover(modalRover);\n      setParam(modalParam);\n      toggle();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(Toolbar, {\n    position: \"static\",\n    className: classes.nasaHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(DashboardIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginTop: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      textAlign: \"center\"\n    },\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Exchange\"))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(SettingsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }))))), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, content(data)));\n};\n\nexport default ExchangeCard;","map":{"version":3,"sources":["/dashboard/src/widgets/Exchange.js"],"names":["axios","Card","Toolbar","IconButton","DashboardIcon","SettingsIcon","DeleteIcon","Typography","CardContent","React","useEffect","useState","Image","Modal","makeStyles","Grid","Button","Form","FormGroup","Input","useStyles","theme","exchangeHeader","backgroundColor","color","exchangeConfig","align","getLatestExchangeData","base","response","method","url","data","e","console","log","getExchangeDataStartEnd","start","end","ExchangeCard","props","classes","undefined","setData","sol","setSol","param","Param","setParam","rover","Rover","setRover","modalParam","setModalParam","modalRover","setModalRover","content","Date","modal","setModal","toggle","target","value","save","nasaHeader","marginTop","textAlign"],"mappings":"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","sourcesContent":["// import MetricsGraphics from 'react-metrics-graphics';\n// import 'metrics-graphics/dist/metricsgraphics.css';\n//\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, {useEffect, useState} from \"react\";\nimport {Image, Modal} from \"react-bootstrap\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button, Form, FormGroup, Input} from \"reactstrap\";\n\nconst useStyles = makeStyles(theme => ({\n    exchangeHeader: {\n        backgroundColor: \"#A0A0A0\",\n        color: \"#FFFFFF\"\n    },\n    exchangeConfig: {\n        align: \"right\",\n    },\n}));\n\nconst getLatestExchangeData = async (base=\"EUR\") => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: 'https://api.exchangeratesapi.io/latest?base=' + base,\n        });\n        return response.data;\n    } catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst getExchangeDataStartEnd = async (base=\"EUR\", start=\"2018-01-01\", end=\"2019-01-01\") => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: 'https://api.exchangeratesapi.io/history?base=' + base + '&start_at=' + start + '&end_at=' + end,\n        });\n        return response.data;\n    } catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst ExchangeCard = (props) => {\n    const classes = useStyles();\n    const [data, setData] = useState(undefined);\n    const [sol, setSol] = useState(undefined);\n    const [Param, setParam] = useState(props.param);\n    const [Rover, setRover] = useState(props.rover);\n    const [modalParam, setModalParam] = useState(\"last\");\n    const [modalRover, setModalRover] = useState(\"Opportunity\");\n\n    // useEffect(\n    //     () => { async function fetchData() {\n    //         let tmp = await getMarsImgFromRover(Rover, 1);\n    //         let sol;\n    //         if (Param === \"random\")\n    //             sol = Math.floor(Math.random() * tmp.photos[0].rover.max_sol) + 1;\n    //         else\n    //             sol = tmp.photos[0].rover.max_sol;\n    //         let res = await getMarsImgFromRover(Rover, sol);\n    //         setData(res);\n    //         setSol(sol);\n    //     }\n    //         fetchData();\n    //     }, [Param, Rover]);\n\n    const content = (data) => {\n        return (\n            <MetricsGraphics\n                title=\"Downloads\"\n                description=\"This graphic shows a time-series of downloads.\"\n                data={ [{'date':new Date('2014-11-01'),'value':12}, {'date':new Date('2014-11-02'),'value':18}] }\n                width={600}\n                height={250}\n                x_accessor=\"date\"\n                y_accessor=\"value\"\n            />\n        );\n        // if (data === undefined) {\n        //     return (\n        //         <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n        //             <h4>Loading</h4>\n        //         </div>\n        //     );\n        // } else {\n        //     if (data.photos[0] !== undefined) {\n        //         return (\n        //             <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n        //                 <Image src={data.photos[0].img_src} fluid/>\n        //                 <Typography gutterBottom variant=\"h6\">\n        //                     {data.photos[0].rover.name}\n        //                 </Typography>\n        //                 <Typography variant=\"body2\" color=\"textSecondary\">\n        //                     Picture was taken on {data.photos[0].earth_date} (sol : {sol}) by the {data.photos[0].camera.full_name}\n        //                 </Typography>\n        //             </div>\n        //         );\n        //     } else {\n        //         return (\n        //             <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n        //                 <Typography gutterBottom variant=\"h6\">\n        //                     {Rover}\n        //                 </Typography>\n        //                 <Typography variant=\"body2\" color=\"textSecondary\">\n        //                     No picture was taken on sol {sol} by {Rover}\n        //                 </Typography>\n        //             </div>\n        //         );\n        //     }\n        // }\n    };\n\n    const [modal, setModal] = useState(true);\n\n    const toggle = () => setModal(!modal);\n\n    return (\n        <Card>\n            <Modal show={modal} onHide={toggle} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Params</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <FormGroup>\n                            <label>Rover</label>\n                            <Input type=\"select\" onChange={e => setModalRover(e.target.value)}>\n                                <option selected={Rover === \"Opportunity\"}>Opportunity</option>\n                                <option selected={Rover === \"Curiosity\"}>Curiosity</option>\n                                <option selected={Rover === \"Spirit\"}>Spirit</option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </Modal.Body>\n                <Modal.Body>\n                    <Form>\n                        <FormGroup>\n                            <label>Param</label>\n                            <Input type=\"select\" onChange={e => setModalParam(e.target.value)}>\n                                <option selected={Param === \"last\"}>last</option>\n                                <option selected={Param === \"random\"}>random</option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button className={classes.save} onClick={() => {setRover(modalRover); setParam(modalParam); toggle()}}>Save</Button>\n                </Modal.Footer>\n            </Modal>\n            <Toolbar position=\"static\" className={classes.nasaHeader}>\n                <Grid container spacing={1}>\n                    <Grid item xs={2}>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <DashboardIcon/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <div style={{marginTop: \"10px\"}}>\n                            <Typography style={{textAlign: \"center\"}} variant=\"h5\">\n                                Exchange\n                            </Typography>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <IconButton color=\"inherit\" aria-label=\"menu\"  onClick={toggle}>\n                            <SettingsIcon/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <IconButton color=\"inherit\" aria-label=\"menu\">\n                            <DeleteIcon/>\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n            <CardContent>\n                {content(data)}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default ExchangeCard;\n"]},"metadata":{},"sourceType":"module"}