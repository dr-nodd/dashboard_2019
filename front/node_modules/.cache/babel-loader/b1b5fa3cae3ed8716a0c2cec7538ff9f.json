{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/nasa.js\";\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { Image, Modal } from \"react-bootstrap\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nconst useStyles = makeStyles(theme => ({\n  nasaHeader: {\n    backgroundColor: \"#FFA500\",\n    color: \"#FFFFFF\"\n  },\n  nasaConfig: {\n    align: \"right\"\n  },\n  save: {\n    backgroundColor: \"#12ACDE\",\n    border: \"#12ACDE\",\n    color: \"#FFFFFF\",\n    \"&:hover\": {\n      backgroundColor: \"#0F91BC\"\n    }\n  }\n}));\n\nconst getMarsImgFromRover = async (rover, sol) => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: 'https://api.nasa.gov/mars-photos/api/v1/rovers/' + rover + '/photos?sol=' + sol + '&api_key=pANfIB5rv8J2nbFIbpNfua8WgGYtpQ8BEa8fsZXk'\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst NasaCard = props => {\n  const classes = useStyles();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(undefined),\n        _useState4 = _slicedToArray(_useState3, 2),\n        sol = _useState4[0],\n        setSol = _useState4[1];\n\n  const _useState5 = useState(props.param),\n        _useState6 = _slicedToArray(_useState5, 2),\n        Param = _useState6[0],\n        setParam = _useState6[1];\n\n  const _useState7 = useState(props.rover),\n        _useState8 = _slicedToArray(_useState7, 2),\n        Rover = _useState8[0],\n        setRover = _useState8[1];\n\n  const _useState9 = useState(\"random\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        modalParam = _useState10[0],\n        setModalParam = _useState10[1];\n\n  const _useState11 = useState(\"Spirit\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        modalRover = _useState12[0],\n        setModalRover = _useState12[1];\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        reset = _useState14[0],\n        setReset = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        hidden = _useState16[0],\n        setHidden = _useState16[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let tmp = await getMarsImgFromRover(Rover, 1);\n      let sol;\n      if (Param === \"random\") sol = Math.floor(Math.random() * tmp.photos[0].rover.max_sol) + 1;else sol = tmp.photos[0].rover.max_sol;\n      let res = await getMarsImgFromRover(Rover, sol);\n      setData(res);\n      setSol(sol);\n    }\n\n    fetchData();\n  }, [Param, Rover, reset]);\n\n  const content = data => {\n    if (data === undefined) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"15px\",\n          marginRight: \"15px\",\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      if (data.photos[0] !== undefined) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, data.photos[0].rover.name)), React.createElement(Grid, {\n          item: true,\n          xs: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          onClick: () => {\n            setReset(reset + 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(LoopIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: data.photos[0].img_src,\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        })), React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          style: {\n            textAlign: \"center\"\n          },\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Picture was taken on \", data.photos[0].earth_date, \" (sol : \", sol, \") by the \", data.photos[0].camera.full_name))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, Rover)), React.createElement(Grid, {\n          item: true,\n          xs: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          onClick: () => {\n            setReset(reset + 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(LoopIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          style: {\n            textAlign: \"center\",\n            marginLeft: \"15px\",\n            marginRight: \"15px\",\n            marginTop: \"15px\"\n          },\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"No picture was taken on sol \", sol, \" by \", Rover))));\n      }\n    }\n  };\n\n  const _useState17 = useState(true),\n        _useState18 = _slicedToArray(_useState17, 2),\n        modal = _useState18[0],\n        setModal = _useState18[1];\n\n  const toggle = () => setModal(!modal);\n\n  if (hidden === \"hidden\") {\n    return React.createElement(Card, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Nasa\");\n  } else {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: modal,\n      onHide: toggle,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Params\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Rover\"), React.createElement(Input, {\n      type: \"select\",\n      onChange: e => setModalRover(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: Rover === \"Opportunity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Opportunity\"), React.createElement(\"option\", {\n      selected: Rover === \"Curiosity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Curiosity\"), React.createElement(\"option\", {\n      selected: Rover === \"Spirit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Spirit\"))))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Photo\"), React.createElement(Input, {\n      type: \"select\",\n      onChange: e => setModalParam(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: Param === \"last\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"last\"), React.createElement(\"option\", {\n      selected: Param === \"random\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"random\"))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.save,\n      onClick: () => {\n        setRover(modalRover);\n        setParam(modalParam);\n        toggle();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Toolbar, {\n      position: \"static\",\n      className: classes.nasaHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: {\n        textAlign: \"center\"\n      },\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Nasa\"))), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: () => setHidden(\"hidden\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }))))), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, content(data)));\n  }\n};\n\nexport default NasaCard;","map":{"version":3,"sources":["/dashboard/src/widgets/nasa.js"],"names":["axios","Card","Toolbar","IconButton","DashboardIcon","SettingsIcon","DeleteIcon","Typography","CardContent","React","useEffect","useState","Image","Modal","makeStyles","Grid","Button","Form","FormGroup","Input","LoopIcon","useStyles","theme","nasaHeader","backgroundColor","color","nasaConfig","align","save","border","getMarsImgFromRover","rover","sol","response","method","url","data","e","console","log","NasaCard","props","classes","undefined","setData","setSol","param","Param","setParam","Rover","setRover","modalParam","setModalParam","modalRover","setModalRover","reset","setReset","hidden","setHidden","fetchData","tmp","Math","floor","random","photos","max_sol","res","content","textAlign","marginLeft","marginRight","marginTop","name","img_src","earth_date","camera","full_name","modal","setModal","toggle","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, {useEffect, useState} from \"react\";\nimport {Image, Modal} from \"react-bootstrap\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button, Form, FormGroup, Input} from \"reactstrap\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\n\nconst useStyles = makeStyles(theme => ({\n    nasaHeader: {\n        backgroundColor: \"#FFA500\",\n        color: \"#FFFFFF\"\n    },\n    nasaConfig: {\n      align: \"right\",\n    },\n    save: {\n        backgroundColor: \"#12ACDE\",\n        border: \"#12ACDE\",\n        color: \"#FFFFFF\",\n        \"&:hover\": {\n            backgroundColor: \"#0F91BC\"\n        }\n    },\n}));\n\nconst getMarsImgFromRover = async (rover, sol) => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: 'https://api.nasa.gov/mars-photos/api/v1/rovers/' + rover + '/photos?sol=' + sol + '&api_key=pANfIB5rv8J2nbFIbpNfua8WgGYtpQ8BEa8fsZXk',\n        });\n        return response.data;\n    } catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst NasaCard = (props) => {\n    const classes = useStyles();\n    const [data, setData] = useState(undefined);\n    const [sol, setSol] = useState(undefined);\n    const [Param, setParam] = useState(props.param);\n    const [Rover, setRover] = useState(props.rover);\n    const [modalParam, setModalParam] = useState(\"random\");\n    const [modalRover, setModalRover] = useState(\"Spirit\");\n    const [reset, setReset] = useState(0);\n    const [hidden, setHidden] = useState(null);\n\n    useEffect(\n        () => { async function fetchData() {\n            let tmp = await getMarsImgFromRover(Rover, 1);\n            let sol;\n            if (Param === \"random\")\n                sol = Math.floor(Math.random() * tmp.photos[0].rover.max_sol) + 1;\n            else\n                sol = tmp.photos[0].rover.max_sol;\n            let res = await getMarsImgFromRover(Rover, sol);\n            setData(res);\n            setSol(sol);\n        }\n        fetchData();\n    }, [Param, Rover, reset]);\n\n    const content = (data) => {\n        if (data === undefined) {\n            return (\n                <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                    <h4>Loading</h4>\n                </div>\n            );\n        } else {\n            if (data.photos[0] !== undefined) {\n                return (\n                    <div>\n                        <Grid container spacing={2}>\n                            <Grid item xs={10}>\n                                <Typography gutterBottom variant=\"h6\">\n                                    {data.photos[0].rover.name}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={2}>\n                                <IconButton onClick={() => {setReset(reset + 1)}}>\n                                    <LoopIcon/>\n                                </IconButton>\n                            </Grid>\n                            <Grid item xs={12}  style={{textAlign: \"center\"}}>\n                                <Image src={data.photos[0].img_src} fluid/>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography  style={{textAlign: \"center\"}} variant=\"body2\" color=\"textSecondary\">\n                                    Picture was taken on {data.photos[0].earth_date} (sol : {sol}) by the {data.photos[0].camera.full_name}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <Grid container spacing={2}>\n                            <Grid item xs={10}>\n                                <Typography gutterBottom variant=\"h6\">\n                                    {Rover}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={2}>\n                                <IconButton onClick={() => {setReset(reset + 1)}}>\n                                    <LoopIcon/>\n                                </IconButton>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography  style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}} variant=\"body2\" color=\"textSecondary\">\n                                    No picture was taken on sol {sol} by {Rover}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                );\n            }\n        }\n    };\n\n    const [modal, setModal] = useState(true);\n\n    const toggle = () => setModal(!modal);\n\n    if (hidden === \"hidden\") {\n        return (<Card hidden>Nasa</Card>);\n    } else {\n        return (\n            <Card>\n                <Modal show={modal} onHide={toggle} centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Params</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <FormGroup>\n                                <label>Rover</label>\n                                <Input type=\"select\" onChange={e => setModalRover(e.target.value)}>\n                                    <option selected={Rover === \"Opportunity\"}>Opportunity</option>\n                                    <option selected={Rover === \"Curiosity\"}>Curiosity</option>\n                                    <option selected={Rover === \"Spirit\"}>Spirit</option>\n                                </Input>\n                            </FormGroup>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Body>\n                        <Form>\n                            <FormGroup>\n                                <label>Photo</label>\n                                <Input type=\"select\" onChange={e => setModalParam(e.target.value)}>\n                                    <option selected={Param === \"last\"}>last</option>\n                                    <option selected={Param === \"random\"}>random</option>\n                                </Input>\n                            </FormGroup>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className={classes.save} onClick={() => {\n                            setRover(modalRover);\n                            setParam(modalParam);\n                            toggle()\n                        }}>Save</Button>\n                    </Modal.Footer>\n                </Modal>\n                <Toolbar position=\"static\" className={classes.nasaHeader}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={2}>\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                                <DashboardIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={8}>\n                            <div style={{marginTop: \"10px\"}}>\n                                <Typography style={{textAlign: \"center\"}} variant=\"h5\">\n                                    Nasa\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton color=\"inherit\" aria-label=\"menu\" onClick={toggle}>\n                                <SettingsIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton color=\"inherit\" aria-label=\"menu\" onClick={() => setHidden(\"hidden\")}>\n                                <DeleteIcon/>\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n                <CardContent>\n                    {content(data)}\n                </CardContent>\n            </Card>\n        );\n    }\n};\n\nexport default NasaCard;"]},"metadata":{},"sourceType":"module"}