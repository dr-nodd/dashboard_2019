{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/Quiz.js\";\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal } from 'react-bootstrap';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport { makeStyles } from \"@material-ui/core\";\nconst entryPoint = \"https://opentdb.com/api.php?\";\nconst useStyles = makeStyles(theme => ({\n  nasaHeader: {\n    backgroundColor: \"#c51ec5\",\n    color: \"#FFFFFF\"\n  },\n  save: {\n    backgroundColor: \"#12ACDE\",\n    border: \"#12ACDE\",\n    color: \"#FFFFFF\",\n    \"&:hover\": {\n      backgroundColor: \"#0F91BC\"\n    }\n  }\n}));\n\nconst getQuestion = async (difficulty = \"\", category = \"\") => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: entryPoint + 'amount=1&difficulty=' + difficulty + '&category=' + category\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst QuizCard = props => {\n  const classes = useStyles();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        difficulty = _useState4[0],\n        setDifficulty = _useState4[1];\n\n  const _useState5 = useState(\"Click on me if you want a clue !\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        clue = _useState6[0],\n        setClue = _useState6[1];\n\n  const _useState7 = useState(\"Click on me if you want the answer !\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        resAnswer = _useState8[0],\n        setResAnswer = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        category = _useState10[0],\n        setCategory = _useState10[1];\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        reset = _useState12[0],\n        setReset = _useState12[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let res = await getQuestion(difficulty, category);\n      setData(res);\n    }\n\n    fetchData();\n  }, [difficulty, category, reset]);\n\n  const content = data => {\n    if (data === undefined) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"15px\",\n          marginRight: \"15px\",\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      let theme = data.results[0].category;\n      let diff = data.results[0].difficulty;\n      let type = data.results[0].type;\n      let question = data.results[0].question;\n      let clue_answer = \"You really think that you're getting a clue on a true or false ?\";\n\n      if (type !== \"boolean\") {\n        clue_answer = \"the answer isn't \" + data.results[0].incorrect_answers[0];\n      }\n\n      let answer = \"the answer is \" + data.results[0].correct_answer;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Category : \", theme, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), \"Difficulty : \", diff)), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: () => {\n          setReset(reset + 1);\n          setResAnswer(\"Click on me if you want the answer !\");\n          setClue(\"Click on me if you want a clue !\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(LoopIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, question, \" \", type === \"boolean\" ? \"True or False ?\" : \"\")), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, type === \"boolean\" ? \"True or False ?\" : data.results[0].correct_answer), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, type === \"boolean\" ? \"\" : data.results[0].incorrect_answers[2]), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, type === \"boolean\" ? \"\" : data.results[0].incorrect_answers[0]), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, type === \"boolean\" ? \"\" : data.results[0].incorrect_answers[1]))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        onClick: () => {\n          setClue(clue_answer);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, clue)), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        onClick: () => {\n          setResAnswer(answer);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, resAnswer))));\n    }\n  };\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        modal = _useState14[0],\n        setModal = _useState14[1];\n\n  const _useState15 = useState(\"medium\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        modalDifficulty = _useState16[0],\n        setModalDifficulty = _useState16[1];\n\n  const _useState17 = useState(32),\n        _useState18 = _slicedToArray(_useState17, 2),\n        modalCategory = _useState18[0],\n        setModalCategory = _useState18[1];\n\n  const toggle = () => setModal(!modal);\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    show: modal,\n    onHide: toggle,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Quiz params\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Quiz difficulty\"), React.createElement(Input, {\n    type: \"select\",\n    onChange: e => setModalDifficulty(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    selected: difficulty === \"easy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"easy\"), React.createElement(\"option\", {\n    selected: difficulty === \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"medium\"), React.createElement(\"option\", {\n    selected: difficulty === \"hard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"hard\"), React.createElement(\"option\", {\n    value: \"\",\n    selected: difficulty === \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"random\"))))), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Quiz category\"), React.createElement(Input, {\n    type: \"select\",\n    onChange: e => setModalCategory(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    selected: category === \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"random\"), React.createElement(\"option\", {\n    value: 31,\n    selected: category === \"Entertainment: Japanese Anime & Manga\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Entertainment: Japanese Anime & Manga\"), React.createElement(\"option\", {\n    value: 32,\n    selected: category === \"Entertainment: Cartoon & Animations\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Entertainment: Cartoon & Animations\"), React.createElement(\"option\", {\n    value: 30,\n    selected: category === \"Science: Gadgets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Science: Gadgets\"), React.createElement(\"option\", {\n    value: 29,\n    selected: category === \"Entertainment: Comics\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Entertainment: Comics\"), React.createElement(\"option\", {\n    value: 28,\n    selected: category === \"Vehicles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Vehicles\"), React.createElement(\"option\", {\n    value: 27,\n    selected: category === \"Animals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Animals\"), React.createElement(\"option\", {\n    value: 26,\n    selected: category === \"Celebrities\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Celebrities\"), React.createElement(\"option\", {\n    value: 25,\n    selected: category === \"Art\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Art\"), React.createElement(\"option\", {\n    value: 24,\n    selected: category === \"Politics\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Politics\"), React.createElement(\"option\", {\n    value: 23,\n    selected: category === \"History\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"History\"), React.createElement(\"option\", {\n    value: 22,\n    selected: category === \"Geography\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Geography\"), React.createElement(\"option\", {\n    value: 21,\n    selected: category === \"Sports\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Sports\"), React.createElement(\"option\", {\n    value: 20,\n    selected: category === \"Mythology\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Mythology\"), React.createElement(\"option\", {\n    value: 19,\n    selected: category === \"Science: Mathematics\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Science: Mathematics\"), React.createElement(\"option\", {\n    value: 18,\n    selected: category === \"Science: Computers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Science: Computers\"), React.createElement(\"option\", {\n    value: 17,\n    selected: category === \"Science & Nature\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Science & Nature\"), React.createElement(\"option\", {\n    value: 16,\n    selected: category === \"Entertainment: Board Games\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Entertainment: Board Games\"), React.createElement(\"option\", {\n    value: 15,\n    selected: category === \"Entertainment: Video Games\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Entertainment: Video Games\"), React.createElement(\"option\", {\n    value: 14,\n    selected: category === \"Entertainment: Television\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Entertainment: Television\"), React.createElement(\"option\", {\n    value: 13,\n    selected: category === \"Entertainment: Musicals & Theatres\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Entertainment: Musicals & Theatres\"), React.createElement(\"option\", {\n    value: 12,\n    selected: category === \"Entertainment: Music\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Entertainment: Music\"), React.createElement(\"option\", {\n    value: 11,\n    selected: category === \"Entertainment: Film\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Entertainment: Film\"), React.createElement(\"option\", {\n    value: 10,\n    selected: category === \"Entertainment: Books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Entertainment: Books\"), React.createElement(\"option\", {\n    value: 9,\n    selected: category === \"General Knowledge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"General Knowledge\"))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.save,\n    onClick: () => {\n      setDifficulty(modalDifficulty);\n      setCategory(modalCategory);\n      toggle();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(Toolbar, {\n    position: \"static\",\n    className: classes.nasaHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(DashboardIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginTop: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      textAlign: \"center\"\n    },\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Quiz\"))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(SettingsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }))))), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, content(data)));\n};\n\nexport default QuizCard;","map":{"version":3,"sources":["/dashboard/src/widgets/Quiz.js"],"names":["axios","Card","Grid","Toolbar","IconButton","DashboardIcon","SettingsIcon","LoopIcon","DeleteIcon","Typography","CardContent","React","useEffect","useState","Modal","Button","Form","FormGroup","Input","makeStyles","entryPoint","useStyles","theme","nasaHeader","backgroundColor","color","save","border","getQuestion","difficulty","category","response","method","url","data","e","console","log","QuizCard","props","classes","undefined","setData","setDifficulty","clue","setClue","resAnswer","setResAnswer","setCategory","reset","setReset","fetchData","res","content","textAlign","marginLeft","marginRight","marginTop","results","diff","type","question","clue_answer","incorrect_answers","answer","correct_answer","modal","setModal","modalDifficulty","setModalDifficulty","modalCategory","setModalCategory","toggle","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, {useEffect, useState} from \"react\";\nimport { Modal } from 'react-bootstrap';\nimport { Button, Form, FormGroup, Input} from 'reactstrap';\nimport {makeStyles} from \"@material-ui/core\";\n\nconst entryPoint = \"https://opentdb.com/api.php?\";\n\nconst useStyles = makeStyles(theme => ({\n    nasaHeader: {\n        backgroundColor: \"#c51ec5\",\n        color: \"#FFFFFF\"\n    },\n    save: {\n        backgroundColor: \"#12ACDE\",\n        border: \"#12ACDE\",\n        color: \"#FFFFFF\",\n        \"&:hover\": {\n            backgroundColor: \"#0F91BC\"\n        }\n    },\n}));\n\nconst getQuestion = async (difficulty=\"\", category=\"\") => {\n    try {\n        const response =  await axios ({\n            method: 'GET',\n            url: entryPoint + 'amount=1&difficulty=' + difficulty + '&category=' + category,\n        })\n        return response.data;\n    }\n    catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst QuizCard = (props) => {\n    const classes = useStyles();\n    const [data, setData] = useState(undefined);\n    const [difficulty, setDifficulty] = useState(\"\");\n    const [clue, setClue] = useState(\"Click on me if you want a clue !\");\n    const [resAnswer, setResAnswer] = useState(\"Click on me if you want the answer !\");\n    const [category, setCategory] = useState(\"\");\n    const [reset, setReset] = useState(0);\n\n    useEffect(\n        () => { async function fetchData() {\n            let res = await getQuestion(difficulty, category);\n            setData(res);\n        }\n            fetchData();\n        }, [difficulty, category, reset]);\n\n    const content = (data) => {\n        if (data === undefined) {\n            return (\n                <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                    <h4>Loading</h4>\n                </div>\n            );\n        } else {\n            let theme = data.results[0].category;\n            let diff = data.results[0].difficulty;\n            let type = data.results[0].type;\n            let question = data.results[0].question;\n            let clue_answer = \"You really think that you're getting a clue on a true or false ?\";\n            if (type !== \"boolean\") {\n                clue_answer = \"the answer isn't \" + data.results[0].incorrect_answers[0];\n            }\n            let answer = \"the answer is \" + data.results[0].correct_answer;\n            return (\n                <div>\n                    <Grid container spacing={2}>\n                        <Grid item xs={10}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                Category : {theme}<br/>Difficulty : {diff}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <IconButton onClick={() => {setReset(reset + 1); setResAnswer(\"Click on me if you want the answer !\"); setClue(\"Click on me if you want a clue !\")}}>\n                                <LoopIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h6\">\n                                {question} {type === \"boolean\" ? \"True or False ?\" : \"\"}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                <Grid item xs={12}>\n                                    {type === \"boolean\" ? \"True or False ?\" : data.results[0].correct_answer}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    {type === \"boolean\" ? \"\" : data.results[0].incorrect_answers[2]}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    {type === \"boolean\" ? \"\" : data.results[0].incorrect_answers[0]}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    {type === \"boolean\" ? \"\" : data.results[0].incorrect_answers[1]}\n                                </Grid>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\" onClick={() => {setClue(clue_answer)}}>\n                                {clue}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\" onClick={() => {setResAnswer(answer)}}>\n                                {resAnswer}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        }\n    };\n\n    const [modal, setModal] = useState(false);\n    const [modalDifficulty, setModalDifficulty] = useState(\"medium\");\n    const [modalCategory, setModalCategory] = useState(32);\n\n    const toggle = () => setModal(!modal);\n\n    return (\n        <Card>\n            <Modal show={modal} onHide={toggle} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Quiz params</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <FormGroup>\n                            <label>Quiz difficulty</label>\n                            <Input type=\"select\" onChange={e => setModalDifficulty(e.target.value)}>\n                                <option selected={difficulty === \"easy\"}>easy</option>\n                                <option selected={difficulty === \"medium\"}>medium</option>\n                                <option selected={difficulty === \"hard\"}>hard</option>\n                                <option value={\"\"} selected={difficulty === \"\"}>random</option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </Modal.Body>\n                <Modal.Body>\n                    <Form>\n                        <FormGroup>\n                            <label>Quiz category</label>\n                            <Input type=\"select\" onChange={e => setModalCategory(e.target.value)}>\n                                <option value={\"\"} selected={category === \"\"}>random</option>\n                                <option value={31} selected={category === \"Entertainment: Japanese Anime & Manga\"}>Entertainment: Japanese Anime & Manga</option>\n                                <option value={32} selected={category === \"Entertainment: Cartoon & Animations\"}>Entertainment: Cartoon & Animations</option>\n                                <option value={30} selected={category === \"Science: Gadgets\"}>Science: Gadgets</option>\n                                <option value={29} selected={category === \"Entertainment: Comics\"}>Entertainment: Comics</option>\n                                <option value={28} selected={category === \"Vehicles\"}>Vehicles</option>\n                                <option value={27} selected={category === \"Animals\"}>Animals</option>\n                                <option value={26} selected={category === \"Celebrities\"}>Celebrities</option>\n                                <option value={25} selected={category === \"Art\"}>Art</option>\n                                <option value={24} selected={category === \"Politics\"}>Politics</option>\n                                <option value={23} selected={category === \"History\"}>History</option>\n                                <option value={22} selected={category === \"Geography\"}>Geography</option>\n                                <option value={21} selected={category === \"Sports\"}>Sports</option>\n                                <option value={20} selected={category === \"Mythology\"}>Mythology</option>\n                                <option value={19} selected={category === \"Science: Mathematics\"}>Science: Mathematics</option>\n                                <option value={18} selected={category === \"Science: Computers\"}>Science: Computers</option>\n                                <option value={17} selected={category === \"Science & Nature\"}>Science & Nature</option>\n                                <option value={16} selected={category === \"Entertainment: Board Games\"}>Entertainment: Board Games</option>\n                                <option value={15} selected={category === \"Entertainment: Video Games\"}>Entertainment: Video Games</option>\n                                <option value={14} selected={category === \"Entertainment: Television\"}>Entertainment: Television</option>\n                                <option value={13} selected={category === \"Entertainment: Musicals & Theatres\"}>Entertainment: Musicals & Theatres</option>\n                                <option value={12} selected={category === \"Entertainment: Music\"}>Entertainment: Music</option>\n                                <option value={11} selected={category === \"Entertainment: Film\"}>Entertainment: Film</option>\n                                <option value={10} selected={category === \"Entertainment: Books\"}>Entertainment: Books</option>\n                                <option value={9} selected={category === \"General Knowledge\"}>General Knowledge</option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button className={classes.save} onClick={() => {setDifficulty(modalDifficulty); setCategory(modalCategory); toggle()}}>Save</Button>\n                </Modal.Footer>\n            </Modal>\n            <Toolbar position=\"static\" className={classes.nasaHeader}>\n                <Grid container spacing={1}>\n                    <Grid item xs={2}>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <DashboardIcon/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <div style={{marginTop: \"10px\"}}>\n                            <Typography style={{textAlign: \"center\"}} variant=\"h5\">\n                                Quiz\n                            </Typography>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <IconButton color=\"inherit\" aria-label=\"menu\" onClick={toggle}>\n                            <SettingsIcon/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <IconButton color=\"inherit\" aria-label=\"menu\">\n                            <DeleteIcon/>\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n            <CardContent>\n                {content(data)}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default QuizCard;"]},"metadata":{},"sourceType":"module"}