{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/accuWeather.js\";\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nconst apiKey = \"3cLQtZD1ekZ0pnWKYCZ5JMGqrp3BGAVQ\";\nconst entryPoint = \"http://dataservice.accuweather.com/\";\nconst useStyles = makeStyles(theme => ({\n  nasaHeader: {\n    backgroundColor: \"#FFA500\",\n    color: \"#FFFFFF\"\n  }\n}));\n\nconst getLocationKey = async city => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: entryPoint + 'locations/v1/cities/search?q=' + city + '&apikey=' + apiKey\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst getInfoFromLocation = async locationKey => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: entryPoint + 'forecasts/v1/daily/1day/' + locationKey + '?apikey=' + apiKey\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst AccuWeatherCard = props => {\n  const classes = useStyles();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let location = await getLocationKey(\"Lille\");\n      console.log(location[0].Key);\n      let res = await getInfoFromLocation(location[0].Key);\n      setData(res);\n    }\n\n    fetchData();\n  }, []);\n\n  const content = data => {\n    let maxTemp = (data.DailyForecasts.Temperature.Maximum.value - 32) * (5 / 9);\n    let minTemp = (data.DailyForecasts.Temperature.Minimum.value - 32) * (5 / 9);\n    let dailyIcon = data.DailyForecasts.Day;\n    let nightlyIcon = data.DailyForecasts.Day;\n\n    if (data === undefined) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"15px\",\n          marginRight: \"15px\",\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, data.Headline.Text), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, data.Headline.Text));\n    }\n  };\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    position: \"static\",\n    className: classes.nasaHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(DashboardIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"AccuWeather\"), React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(SettingsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, content(data)));\n};\n\nexport default AccuWeatherCard;","map":{"version":3,"sources":["/dashboard/src/widgets/accuWeather.js"],"names":["axios","Card","Toolbar","IconButton","DashboardIcon","SettingsIcon","Typography","CardContent","React","useEffect","useState","makeStyles","apiKey","entryPoint","useStyles","theme","nasaHeader","backgroundColor","color","getLocationKey","city","response","method","url","data","e","console","log","getInfoFromLocation","locationKey","AccuWeatherCard","props","classes","undefined","setData","fetchData","location","Key","res","content","maxTemp","DailyForecasts","Temperature","Maximum","value","minTemp","Minimum","dailyIcon","Day","nightlyIcon","textAlign","marginLeft","marginRight","marginTop","Headline","Text"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\n\nconst apiKey = \"3cLQtZD1ekZ0pnWKYCZ5JMGqrp3BGAVQ\";\nconst entryPoint = \"http://dataservice.accuweather.com/\";\n\nconst useStyles = makeStyles(theme => ({\n    nasaHeader: {\n        backgroundColor: \"#FFA500\",\n        color: \"#FFFFFF\"\n    },\n}));\n\nconst getLocationKey = async (city) => {\n    try {\n        const response =  await axios ({\n            method: 'GET',\n            url: entryPoint + 'locations/v1/cities/search?q=' + city + '&apikey=' + apiKey,\n        })\n        return response.data;\n    }\n    catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst getInfoFromLocation = async (locationKey) => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: entryPoint + 'forecasts/v1/daily/1day/' + locationKey + '?apikey=' + apiKey,\n        });\n        return response.data;\n    } catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst AccuWeatherCard = (props) => {\n    const classes = useStyles();\n    const [data, setData] = useState(undefined);\n\n    useEffect(\n        () => { async function fetchData() {\n            let location = await getLocationKey(\"Lille\");\n            console.log(location[0].Key);\n            let res = await getInfoFromLocation(location[0].Key);\n            setData(res);\n        }\n        fetchData();\n    }, []);\n\n    const content = (data) => {\n        let maxTemp = (data.DailyForecasts.Temperature.Maximum.value - 32) * (5/9);\n        let minTemp = (data.DailyForecasts.Temperature.Minimum.value - 32) * (5/9);\n        let dailyIcon = data.DailyForecasts.Day;\n        let nightlyIcon = data.DailyForecasts.Day;\n\n\n        if (data === undefined) {\n            return (\n                <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                    <h4>Loading</h4>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Typography gutterBottom variant=\"h6\">\n                        {data.Headline.Text}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        {data.Headline.Text}\n                    </Typography>\n                </div>\n            );\n        }\n    };\n\n    return (\n        <Card>\n            <Toolbar position=\"static\" className={classes.nasaHeader}>\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                    <DashboardIcon/>\n                </IconButton>\n                <Typography variant=\"h5\">\n                    AccuWeather\n                </Typography>\n                <IconButton color=\"inherit\" aria-label=\"menu\">\n                    <SettingsIcon/>\n                </IconButton>\n            </Toolbar>\n            <CardContent>\n                {content(data)}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default AccuWeatherCard;"]},"metadata":{},"sourceType":"module"}