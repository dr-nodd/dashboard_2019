{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/accuWeather.js\";\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Image } from \"react-bootstrap\";\nconst apiKey = \"3cLQtZD1ekZ0pnWKYCZ5JMGqrp3BGAVQ\";\nconst entryPoint = \"http://dataservice.accuweather.com/\";\nconst useStyles = makeStyles(theme => ({\n  nasaHeader: {\n    backgroundColor: \"#e6005c\",\n    color: \"#FFFFFF\"\n  }\n}));\n\nconst getLocationKey = async city => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: entryPoint + 'locations/v1/cities/search?q=' + city + '&apikey=' + apiKey\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst getInfoFromLocation = async locationKey => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: entryPoint + 'forecasts/v1/daily/1day/' + locationKey + '?apikey=' + apiKey\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst AccuWeatherCard = props => {\n  const classes = useStyles();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let location = await getLocationKey(props.city);\n      let res = await getInfoFromLocation(location[0].Key);\n      setData(res);\n    }\n\n    fetchData();\n  }, []);\n\n  const content = data => {\n    if (data === undefined) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"15px\",\n          marginRight: \"15px\",\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      let date = data.DailyForecasts[0].Date.split('T')[0];\n      let gmt = data.DailyForecasts[0].Date.split(\":00:00\")[1];\n      let maxTemp = ((parseInt(data.DailyForecasts[0].Temperature.Maximum.Value, 10) - 32) * (5 / 9)).toFixed();\n      let minTemp = ((parseInt(data.DailyForecasts[0].Temperature.Minimum.Value, 10) - 32) * (5 / 9)).toFixed();\n      let dailyIcon = \"https://developer.accuweather.com/sites/default/files/\" + data.DailyForecasts[0].Day.Icon + \"-s.png\";\n      let nightlyIcon = \"https://developer.accuweather.com/sites/default/files/\" + data.DailyForecasts[0].Night.Icon + \"-s.png\";\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, props.city), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, date), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"GMT : \", gmt)), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Max : \", maxTemp, \" \\xB0C\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), \"Min : \", minTemp, \" \\xB0C\")), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Day\"), React.createElement(Image, {\n        src: dailyIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Night\"), React.createElement(Image, {\n        src: nightlyIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }))));\n    }\n  };\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    position: \"static\",\n    className: classes.nasaHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(DashboardIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginTop: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      textAlign: \"center\"\n    },\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"AccuWeather\"))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(SettingsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(SettingsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))))), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, content(data)));\n};\n\nexport default AccuWeatherCard;","map":{"version":3,"sources":["/dashboard/src/widgets/accuWeather.js"],"names":["axios","Card","Grid","Toolbar","IconButton","DashboardIcon","SettingsIcon","Typography","CardContent","React","useEffect","useState","makeStyles","Image","apiKey","entryPoint","useStyles","theme","nasaHeader","backgroundColor","color","getLocationKey","city","response","method","url","data","e","console","log","getInfoFromLocation","locationKey","AccuWeatherCard","props","classes","undefined","setData","fetchData","location","res","Key","content","textAlign","marginLeft","marginRight","marginTop","date","DailyForecasts","Date","split","gmt","maxTemp","parseInt","Temperature","Maximum","Value","toFixed","minTemp","Minimum","dailyIcon","Day","Icon","nightlyIcon","Night"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {Image} from \"react-bootstrap\";\n\nconst apiKey = \"3cLQtZD1ekZ0pnWKYCZ5JMGqrp3BGAVQ\";\nconst entryPoint = \"http://dataservice.accuweather.com/\";\n\nconst useStyles = makeStyles(theme => ({\n    nasaHeader: {\n        backgroundColor: \"#e6005c\",\n        color: \"#FFFFFF\"\n    },\n}));\n\nconst getLocationKey = async (city) => {\n    try {\n        const response =  await axios ({\n            method: 'GET',\n            url: entryPoint + 'locations/v1/cities/search?q=' + city + '&apikey=' + apiKey,\n        })\n        return response.data;\n    }\n    catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst getInfoFromLocation = async (locationKey) => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: entryPoint + 'forecasts/v1/daily/1day/' + locationKey + '?apikey=' + apiKey,\n        });\n        return response.data;\n    } catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst AccuWeatherCard = (props) => {\n    const classes = useStyles();\n    const [data, setData] = useState(undefined);\n\n    useEffect(\n        () => { async function fetchData() {\n            let location = await getLocationKey(props.city);\n            let res = await getInfoFromLocation(location[0].Key);\n            setData(res);\n        }\n        fetchData();\n    }, []);\n\n    const content = (data) => {\n        if (data === undefined) {\n            return (\n                <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                    <h4>Loading</h4>\n                </div>\n            );\n        } else {\n            let date = data.DailyForecasts[0].Date.split('T')[0];\n            let gmt = data.DailyForecasts[0].Date.split(\":00:00\")[1];\n            let maxTemp = ((parseInt(data.DailyForecasts[0].Temperature.Maximum.Value, 10) - 32) * (5/9)).toFixed();\n            let minTemp = ((parseInt(data.DailyForecasts[0].Temperature.Minimum.Value, 10) - 32) * (5/9)).toFixed();\n            let dailyIcon = \"https://developer.accuweather.com/sites/default/files/\" + data.DailyForecasts[0].Day.Icon + \"-s.png\";\n            let nightlyIcon = \"https://developer.accuweather.com/sites/default/files/\" + data.DailyForecasts[0].Night.Icon + \"-s.png\";\n\n            return (\n                <div>\n                    <Grid container spacing={2}>\n                        <Grid item xs={10}>\n                            <Typography gutterBottom variant=\"h6\">\n                                {props.city}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {date}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                GMT : {gmt}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={2} style={{textAlign: \"center\"}}>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                Max : {maxTemp} °C<br/>\n                                Min : {minTemp} °C\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                Day\n                            </Typography>\n                            <Image src={dailyIcon}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                Night\n                            </Typography>\n                            <Image src={nightlyIcon}/>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        }\n    };\n\n    return (\n        <Card>\n            <Toolbar position=\"static\" className={classes.nasaHeader}>\n                <Grid container spacing={1}>\n                    <Grid item xs={1}>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <DashboardIcon/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={9}>\n                        <div style={{marginTop: \"10px\"}}>\n                            <Typography style={{textAlign: \"center\"}} variant=\"h5\">\n                                AccuWeather\n                            </Typography>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <IconButton color=\"inherit\" aria-label=\"menu\">\n                            <SettingsIcon/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <IconButton color=\"inherit\" aria-label=\"menu\">\n                            <SettingsIcon/>\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n            <CardContent>\n                {content(data)}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default AccuWeatherCard;"]},"metadata":{},"sourceType":"module"}