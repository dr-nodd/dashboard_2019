{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/Movie.js\";\nimport { makeStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Image, Modal } from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CardContent from \"@material-ui/core/CardContent\";\nconst apiKey = \"93b6db22\";\nconst entryPoint = \"http://www.omdbapi.com/?\";\nconst useStyles = makeStyles(theme => ({\n  movieHeader: {\n    backgroundColor: \"#719fe6\",\n    color: \"#FFFFFF\"\n  },\n  save: {\n    backgroundColor: \"#12ACDE\",\n    border: \"#12ACDE\",\n    color: \"#FFFFFF\",\n    \"&:hover\": {\n      backgroundColor: \"#0F91BC\"\n    }\n  }\n}));\n\nconst getInfoFromMovie = async movie => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: entryPoint + 't=' + movie + '&apikey=' + apiKey\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst MovieCard = props => {\n  const classes = useStyles();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(\"Frozen\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        movie = _useState4[0],\n        setMovie = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        hidden = _useState6[0],\n        setHidden = _useState6[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let res = await getInfoFromMovie(movie);\n      setData(res);\n    }\n\n    fetchData();\n  }, [movie]);\n\n  const content = data => {\n    if (data === undefined) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"15px\",\n          marginRight: \"15px\",\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      let response = data.Response;\n      let movieTitle = data.Title;\n      let releaseDate = data.Released;\n      let runtime = data.Runtime;\n      let poster = data.Poster;\n      let rating = data.Metascore;\n      let rating2 = data.imdbRating;\n      let plot = data.Plot;\n      let genre = data.Genre;\n      let director = data.Director;\n      let actors = data.Actors;\n      let awards = data.Awards;\n\n      if (response === \"True\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, movieTitle), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Release date: \", releaseDate), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Runtime: \", runtime), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Genre: \", genre), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), \"Director: \", director), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Actors: \", actors), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Awards: \", awards), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }), \"Metascore: \", rating), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"imdbRating: \", rating2)), React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          style: {\n            fontStyle: \"italic\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }), plot))), React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: poster,\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"The movie \\\"\", movie, \"\\\" was not found.\"))));\n      }\n    }\n  };\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        modal = _useState8[0],\n        setModal = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        myText = _useState10[0],\n        setMyText = _useState10[1];\n\n  const toggle = () => setModal(!modal);\n\n  if (hidden === \"hidden\") {\n    return React.createElement(Card, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Nasa\");\n  } else {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: modal,\n      onHide: toggle,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Choose a movie\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: e => setMyText(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.save,\n      onClick: () => {\n        setMovie(myText);\n        toggle();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Toolbar, {\n      position: \"static\",\n      className: classes.movieHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: {\n        textAlign: \"center\"\n      },\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Movie\"))), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: () => setHidden(\"hidden\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))))), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, content(data)));\n  }\n};\n\nexport default MovieCard;","map":{"version":3,"sources":["/dashboard/src/widgets/Movie.js"],"names":["makeStyles","axios","Grid","Typography","Image","Modal","React","useEffect","useState","Card","Button","Form","FormGroup","Input","Toolbar","IconButton","DashboardIcon","SettingsIcon","DeleteIcon","CardContent","apiKey","entryPoint","useStyles","theme","movieHeader","backgroundColor","color","save","border","getInfoFromMovie","movie","response","method","url","data","e","console","log","MovieCard","props","classes","undefined","setData","setMovie","hidden","setHidden","fetchData","res","content","textAlign","marginLeft","marginRight","marginTop","Response","movieTitle","Title","releaseDate","Released","runtime","Runtime","poster","Poster","rating","Metascore","rating2","imdbRating","plot","Plot","genre","Genre","director","Director","actors","Actors","awards","Awards","fontStyle","modal","setModal","myText","setMyText","toggle","target","value"],"mappings":"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","sourcesContent":["import {makeStyles} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Image, Modal} from \"react-bootstrap\";\nimport React, {useEffect, useState} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport {Button, Form, FormGroup, Input} from \"reactstrap\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst apiKey = \"93b6db22\";\nconst entryPoint = \"http://www.omdbapi.com/?\";\n\nconst useStyles = makeStyles(theme => ({\n    movieHeader: {\n        backgroundColor: \"#719fe6\",\n        color: \"#FFFFFF\"\n    },\n    save: {\n        backgroundColor: \"#12ACDE\",\n        border: \"#12ACDE\",\n        color: \"#FFFFFF\",\n        \"&:hover\": {\n            backgroundColor: \"#0F91BC\"\n        }\n    },\n}));\n\nconst getInfoFromMovie = async (movie) => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: entryPoint + 't=' + movie + '&apikey=' + apiKey,\n        });\n        return response.data;\n    } catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst MovieCard = (props) => {\n    const classes = useStyles();\n\n    const [data, setData] = useState(undefined);\n    const [movie, setMovie] = useState(\"Frozen\");\n    const [hidden, setHidden] = useState(null);\n\n    useEffect(\n        () => { async function fetchData() {\n            let res = await getInfoFromMovie(movie);\n            setData(res);\n        }\n            fetchData();\n        }, [movie]);\n\n    const content = (data) => {\n        if (data === undefined) {\n            return (\n                <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                    <h4>Loading</h4>\n                </div>\n            );\n        } else {\n            let response = data.Response;\n            let movieTitle = data.Title;\n            let releaseDate = data.Released;\n            let runtime = data.Runtime;\n            let poster = data.Poster;\n            let rating = data.Metascore;\n            let rating2 = data.imdbRating;\n            let plot = data.Plot;\n            let genre = data.Genre;\n            let director = data.Director;\n            let actors = data.Actors;\n            let awards = data.Awards;\n\n            if (response === \"True\") {\n                return (\n                    <div>\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}>\n                                <Grid item xs={12}>\n                                    <Typography gutterBottom variant=\"h5\">\n                                        {movieTitle}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        Release date: {releaseDate}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        Runtime: {runtime}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        Genre: {genre}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        <br/>\n                                        Director: {director}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        Actors: {actors}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        Awards: {awards}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        <br/>\n                                        Metascore: {rating}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        imdbRating: {rating2}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" style={{fontStyle: \"italic\"}}>\n                                        <br/>\n                                        {plot}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6} style={{textAlign: \"center\"}}>\n                                <Image src={poster} fluid/>\n                            </Grid>\n                        </Grid>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <Typography gutterBottom variant=\"h5\" style={{textAlign: \"center\"}}>\n                                    The movie \"{movie}\" was not found.\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                );\n            }\n        }\n    };\n\n    const [modal, setModal] = useState(true);\n    const [myText, setMyText] = useState(null);\n\n    const toggle = () => setModal(!modal);\n    if (hidden === \"hidden\") {\n        return (<Card hidden>Nasa</Card>);\n    } else {\n        return (\n            <Card>\n                <Modal show={modal} onHide={toggle} centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Choose a movie</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <FormGroup>\n                                <Input onChange={e => setMyText(e.target.value)}/>\n                            </FormGroup>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className={classes.save} onClick={() => {\n                            setMovie(myText);\n                            toggle()\n                        }}>Save</Button>\n                    </Modal.Footer>\n                </Modal>\n                <Toolbar position=\"static\" className={classes.movieHeader}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={2}>\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                                <DashboardIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={8}>\n                            <div style={{marginTop: \"10px\"}}>\n                                <Typography style={{textAlign: \"center\"}} variant=\"h5\">\n                                    Movie\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton color=\"inherit\" aria-label=\"menu\" onClick={toggle}>\n                                <SettingsIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton color=\"inherit\" aria-label=\"menu\" onClick={() => setHidden(\"hidden\")}>\n                                <DeleteIcon/>\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n                <CardContent>\n                    {content(data)}\n                </CardContent>\n            </Card>\n        );\n    }\n};\n\nexport default MovieCard;\n"]},"metadata":{},"sourceType":"module"}