{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/Exchange.js\";\n// import MetricsGraphics from 'react-metrics-graphics';\n// import 'metrics-graphics/dist/metricsgraphics.css';\n//\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { Image, Modal } from \"react-bootstrap\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nconst useStyles = makeStyles(theme => ({\n  exchangeHeader: {\n    backgroundColor: \"#A0A0A0\",\n    color: \"#FFFFFF\"\n  },\n  exchangeConfig: {\n    align: \"right\"\n  }\n}));\n\nconst getLatestExchangeData = async (base = \"EUR\") => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest?base=' + base\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst getExchangeDataStartEnd = async (base = \"EUR\", start = \"2018-01-01\", end = \"2019-01-01\") => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/history?base=' + base + '&start_at=' + start + '&end_at=' + end\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst ExchangeCard = props => {\n  const classes = useStyles();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(\"EUR\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        Base = _useState4[0],\n        setBase = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        BaseValue = _useState6[0],\n        setBaseValue = _useState6[1];\n\n  const _useState7 = useState(\"USD\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        Currency = _useState8[0],\n        setCurrency = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        CurrencyValue = _useState10[0],\n        setCurrencyValue = _useState10[1];\n\n  const _useState11 = useState(\"EUR\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        modalBase = _useState12[0],\n        setModalBase = _useState12[1];\n\n  const _useState13 = useState(\"USD\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        modalExchange = _useState14[0],\n        setModalExchange = _useState14[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let res = await getLatestExchangeData(Base);\n      await setData(res);\n      setCurrencyValue(BaseValue * data.rates[Currency]);\n    }\n\n    fetchData();\n  }, [Base, Currency]);\n\n  const content = data => {\n    // return (\n    //     <MetricsGraphics\n    //         title=\"Downloads\"\n    //         description=\"This graphic shows a time-series of downloads.\"\n    //         data={ [{'date':new Date('2014-11-01'),'value':12}, {'date':new Date('2014-11-02'),'value':18}] }\n    //         width={600}\n    //         height={250}\n    //         x_accessor=\"date\"\n    //         y_accessor=\"value\"\n    //     />\n    // );\n    if (data === undefined) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"15px\",\n          marginRight: \"15px\",\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      let base = data.base;\n      let date = data.date;\n      let currency = data.rates[Currency];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Date : \", date)), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Base currency :\"), React.createElement(Input, {\n        value: BaseValue,\n        onChange: e => {\n          setBaseValue(e.target.value);\n          setCurrencyValue(e.target.value * currency);\n        },\n        style: {\n          width: \"80%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, base)), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Exchange currency :\"), React.createElement(Input, {\n        value: CurrencyValue,\n        onChange: e => {\n          setCurrencyValue(e.target.value);\n          setBaseValue(e.target.value / currency);\n        },\n        style: {\n          width: \"80%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, Currency))));\n    }\n  };\n\n  const _useState15 = useState(true),\n        _useState16 = _slicedToArray(_useState15, 2),\n        modal = _useState16[0],\n        setModal = _useState16[1];\n\n  const toggle = () => setModal(!modal);\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    show: modal,\n    onHide: toggle,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Params\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Base currency\"), React.createElement(Input, {\n    type: \"select\",\n    onChange: e => setModalBase(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    selected: Base === \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"EUR\"), React.createElement(\"option\", {\n    selected: Base === \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"USD\"), React.createElement(\"option\", {\n    selected: Base === \"JPY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"JPY\"))))), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Exchange currency\"), React.createElement(Input, {\n    type: \"select\",\n    onChange: e => setModalExchange(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    selected: Currency === \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"EUR\"), React.createElement(\"option\", {\n    selected: Currency === \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"USD\"), React.createElement(\"option\", {\n    selected: Currency === \"JPY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"JPY\"))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.save,\n    onClick: () => {\n      setBase(modalBase);\n      setCurrency(modalExchange);\n      toggle();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(Toolbar, {\n    position: \"static\",\n    className: classes.exchangeHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(DashboardIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginTop: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      textAlign: \"center\"\n    },\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Exchange\"))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(SettingsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }))))), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, content(data)));\n};\n\nexport default ExchangeCard;","map":{"version":3,"sources":["/dashboard/src/widgets/Exchange.js"],"names":["axios","Card","Toolbar","IconButton","DashboardIcon","SettingsIcon","DeleteIcon","Typography","CardContent","React","useEffect","useState","Image","Modal","makeStyles","Grid","Button","Form","FormGroup","Input","useStyles","theme","exchangeHeader","backgroundColor","color","exchangeConfig","align","getLatestExchangeData","base","response","method","url","data","e","console","log","getExchangeDataStartEnd","start","end","ExchangeCard","props","classes","undefined","setData","Base","setBase","BaseValue","setBaseValue","Currency","setCurrency","CurrencyValue","setCurrencyValue","modalBase","setModalBase","modalExchange","setModalExchange","fetchData","res","rates","content","textAlign","marginLeft","marginRight","marginTop","date","currency","target","value","width","modal","setModal","toggle","save"],"mappings":"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","sourcesContent":["// import MetricsGraphics from 'react-metrics-graphics';\n// import 'metrics-graphics/dist/metricsgraphics.css';\n//\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, {useEffect, useState} from \"react\";\nimport {Image, Modal} from \"react-bootstrap\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button, Form, FormGroup, Input} from \"reactstrap\";\n\nconst useStyles = makeStyles(theme => ({\n    exchangeHeader: {\n        backgroundColor: \"#A0A0A0\",\n        color: \"#FFFFFF\"\n    },\n    exchangeConfig: {\n        align: \"right\",\n    },\n}));\n\nconst getLatestExchangeData = async (base=\"EUR\") => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: 'https://api.exchangeratesapi.io/latest?base=' + base,\n        });\n        return response.data;\n    } catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst getExchangeDataStartEnd = async (base=\"EUR\", start=\"2018-01-01\", end=\"2019-01-01\") => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: 'https://api.exchangeratesapi.io/history?base=' + base + '&start_at=' + start + '&end_at=' + end,\n        });\n        return response.data;\n    } catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst ExchangeCard = (props) => {\n    const classes = useStyles();\n    const [data, setData] = useState(undefined);\n    const [Base, setBase] = useState(\"EUR\");\n    const [BaseValue, setBaseValue] = useState(0);\n    const [Currency, setCurrency] = useState(\"USD\");\n    const [CurrencyValue, setCurrencyValue] = useState(0);\n    const [modalBase, setModalBase] = useState(\"EUR\");\n    const [modalExchange, setModalExchange] = useState(\"USD\");\n\n    useEffect(\n        () => { async function fetchData() {\n            let res = await getLatestExchangeData(Base);\n            await setData(res);\n            setCurrencyValue(BaseValue * data.rates[Currency])\n        }\n            fetchData();\n        }, [Base, Currency]);\n\n    const content = (data) => {\n        // return (\n        //     <MetricsGraphics\n        //         title=\"Downloads\"\n        //         description=\"This graphic shows a time-series of downloads.\"\n        //         data={ [{'date':new Date('2014-11-01'),'value':12}, {'date':new Date('2014-11-02'),'value':18}] }\n        //         width={600}\n        //         height={250}\n        //         x_accessor=\"date\"\n        //         y_accessor=\"value\"\n        //     />\n        // );\n        if (data === undefined) {\n            return (\n                <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                    <h4>Loading</h4>\n                </div>\n            );\n        } else {\n            let base = data.base;\n            let date = data.date;\n            let currency = data.rates[Currency];\n\n            return (\n                <div>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                Date : {date}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"h6\">\n                                Base currency :\n                            </Typography>\n                            <Input value={BaseValue} onChange={(e) => {setBaseValue(e.target.value); setCurrencyValue(e.target.value * currency);}} style={{width:\"80%\"}}/>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                {base}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"h6\">\n                                Exchange currency :\n                            </Typography>\n                            <Input value={CurrencyValue} onChange={(e) => {setCurrencyValue(e.target.value); setBaseValue(e.target.value / currency);}} style={{width:\"80%\"}}/>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                {Currency}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        }\n    };\n\n    const [modal, setModal] = useState(true);\n\n    const toggle = () => setModal(!modal);\n\n    return (\n        <Card>\n            <Modal show={modal} onHide={toggle} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Params</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <FormGroup>\n                            <label>Base currency</label>\n                            <Input type=\"select\" onChange={e => setModalBase(e.target.value)}>\n                                <option selected={Base === \"EUR\"}>EUR</option>\n                                <option selected={Base === \"USD\"}>USD</option>\n                                <option selected={Base === \"JPY\"}>JPY</option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </Modal.Body>\n                <Modal.Body>\n                    <Form>\n                        <FormGroup>\n                            <label>Exchange currency</label>\n                            <Input type=\"select\" onChange={e => setModalExchange(e.target.value)}>\n                                <option selected={Currency === \"EUR\"}>EUR</option>\n                                <option selected={Currency === \"USD\"}>USD</option>\n                                <option selected={Currency === \"JPY\"}>JPY</option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button className={classes.save} onClick={() => {setBase(modalBase); setCurrency(modalExchange); toggle()}}>Save</Button>\n                </Modal.Footer>\n            </Modal>\n            <Toolbar position=\"static\" className={classes.exchangeHeader}>\n                <Grid container spacing={1}>\n                    <Grid item xs={2}>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <DashboardIcon/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <div style={{marginTop: \"10px\"}}>\n                            <Typography style={{textAlign: \"center\"}} variant=\"h5\">\n                                Exchange\n                            </Typography>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <IconButton color=\"inherit\" aria-label=\"menu\"  onClick={toggle}>\n                            <SettingsIcon/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <IconButton color=\"inherit\" aria-label=\"menu\">\n                            <DeleteIcon/>\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n            <CardContent>\n                {content(data)}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default ExchangeCard;\n"]},"metadata":{},"sourceType":"module"}