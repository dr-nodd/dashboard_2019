{"ast":null,"code":"import _slicedToArray from \"/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/dashboard/src/widgets/Quiz.js\";\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal } from 'react-bootstrap';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport { makeStyles } from \"@material-ui/core\";\nconst entryPoint = \"https://opentdb.com/api.php?\";\nconst useStyles = makeStyles(theme => ({\n  nasaHeader: {\n    backgroundColor: \"#c51ec5\",\n    color: \"#FFFFFF\"\n  },\n  save: {\n    backgroundColor: \"#12ACDE\",\n    border: \"#12ACDE\",\n    color: \"#FFFFFF\",\n    \"&:hover\": {\n      backgroundColor: \"#0F91BC\"\n    }\n  }\n}));\n\nconst getQuestion = async (difficulty = \"\", category = \"\") => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: entryPoint + 'amount=1&difficulty=' + difficulty + '&category=' + category\n    });\n    return response.data;\n  } catch (e) {\n    console.log(\"error: \", e);\n  }\n};\n\nconst QuizCard = props => {\n  const classes = useStyles();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        difficulty = _useState4[0],\n        setDifficulty = _useState4[1];\n\n  const _useState5 = useState(\"Click on me if you want a clue !\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        clue = _useState6[0],\n        setClue = _useState6[1];\n\n  const _useState7 = useState(\"Click on me if you want the answer !\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        resAnswer = _useState8[0],\n        setResAnswer = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        category = _useState10[0],\n        setCategory = _useState10[1];\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        reset = _useState12[0],\n        setReset = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        hidden = _useState14[0],\n        setHidden = _useState14[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let res = await getQuestion(difficulty, category);\n      setData(res);\n    }\n\n    fetchData();\n  }, [difficulty, category, reset]);\n\n  const content = data => {\n    if (data === undefined) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"15px\",\n          marginRight: \"15px\",\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      let theme = data.results[0].category;\n      let diff = data.results[0].difficulty;\n      let type = data.results[0].type;\n      let question = data.results[0].question;\n      let clue_answer = \"You really think that you're getting a clue on a true or false ?\";\n\n      if (type !== \"boolean\") {\n        clue_answer = \"the answer isn't \" + data.results[0].incorrect_answers[0];\n      }\n\n      let answer = \"the answer is \" + data.results[0].correct_answer;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Category : \", theme, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), \"Difficulty : \", diff)), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: () => {\n          setReset(reset + 1);\n          setResAnswer(\"Click on me if you want the answer !\");\n          setClue(\"Click on me if you want a clue !\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(LoopIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, question, \" \", type === \"boolean\" ? \"True or False ?\" : \"\")), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, type === \"boolean\" ? \"True or False ?\" : data.results[0].correct_answer), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, type === \"boolean\" ? \"\" : data.results[0].incorrect_answers[2]), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, type === \"boolean\" ? \"\" : data.results[0].incorrect_answers[0]), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, type === \"boolean\" ? \"\" : data.results[0].incorrect_answers[1]))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        onClick: () => {\n          setClue(clue_answer);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, clue)), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        onClick: () => {\n          setResAnswer(answer);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, resAnswer))));\n    }\n  };\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        modal = _useState16[0],\n        setModal = _useState16[1];\n\n  const _useState17 = useState(\"\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        modalDifficulty = _useState18[0],\n        setModalDifficulty = _useState18[1];\n\n  const _useState19 = useState(0),\n        _useState20 = _slicedToArray(_useState19, 2),\n        modalCategory = _useState20[0],\n        setModalCategory = _useState20[1];\n\n  const toggle = () => setModal(!modal);\n\n  if (hidden === \"hidden\") {\n    return React.createElement(Card, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Nasa\");\n  } else {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: modal,\n      onHide: toggle,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Quiz params\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Quiz difficulty\"), React.createElement(Input, {\n      type: \"select\",\n      onChange: e => setModalDifficulty(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: difficulty === \"easy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"easy\"), React.createElement(\"option\", {\n      selected: difficulty === \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"medium\"), React.createElement(\"option\", {\n      selected: difficulty === \"hard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"hard\"), React.createElement(\"option\", {\n      value: \"\",\n      selected: difficulty === \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"random\"))))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Quiz category\"), React.createElement(Input, {\n      type: \"select\",\n      onChange: e => setModalCategory(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: 0,\n      selected: category == 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"random\"), React.createElement(\"option\", {\n      value: 31,\n      selected: category == 31,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Entertainment: Japanese Anime & Manga\"), React.createElement(\"option\", {\n      value: 32,\n      selected: category == 32,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Entertainment: Cartoon & Animations\"), React.createElement(\"option\", {\n      value: 30,\n      selected: category == 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Science: Gadgets\"), React.createElement(\"option\", {\n      value: 29,\n      selected: category == 29,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Entertainment: Comics\"), React.createElement(\"option\", {\n      value: 28,\n      selected: category == 28,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Vehicles\"), React.createElement(\"option\", {\n      value: 27,\n      selected: category == 27,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Animals\"), React.createElement(\"option\", {\n      value: 26,\n      selected: category == 26,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Celebrities\"), React.createElement(\"option\", {\n      value: 25,\n      selected: category == 25,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Art\"), React.createElement(\"option\", {\n      value: 24,\n      selected: category == 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Politics\"), React.createElement(\"option\", {\n      value: 23,\n      selected: category == 23,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"History\"), React.createElement(\"option\", {\n      value: 22,\n      selected: category == 22,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Geography\"), React.createElement(\"option\", {\n      value: 21,\n      selected: category == 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Sports\"), React.createElement(\"option\", {\n      value: 20,\n      selected: category == 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Mythology\"), React.createElement(\"option\", {\n      value: 19,\n      selected: category == 19,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Science: Mathematics\"), React.createElement(\"option\", {\n      value: 18,\n      selected: category == 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Science: Computers\"), React.createElement(\"option\", {\n      value: 17,\n      selected: category == 17,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Science & Nature\"), React.createElement(\"option\", {\n      value: 16,\n      selected: category == 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Entertainment: Board Games\"), React.createElement(\"option\", {\n      value: 15,\n      selected: category == 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Entertainment: Video Games\"), React.createElement(\"option\", {\n      value: 14,\n      selected: category == 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Entertainment: Television\"), React.createElement(\"option\", {\n      value: 13,\n      selected: category == 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Entertainment: Musicals & Theatres\"), React.createElement(\"option\", {\n      value: 12,\n      selected: category == 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Entertainment: Music\"), React.createElement(\"option\", {\n      value: 11,\n      selected: category == 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Entertainment: Film\"), React.createElement(\"option\", {\n      value: 10,\n      selected: category == 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Entertainment: Books\"), React.createElement(\"option\", {\n      value: 9,\n      selected: category == 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"General Knowledge\"))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.save,\n      onClick: () => {\n        setDifficulty(modalDifficulty);\n        setCategory(modalCategory);\n        toggle();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Toolbar, {\n      position: \"static\",\n      className: classes.nasaHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: {\n        textAlign: \"center\"\n      },\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Quiz\"))), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: () => setHidden(\"hidden\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }))))), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, content(data)));\n  }\n};\n\nexport default QuizCard;","map":{"version":3,"sources":["/dashboard/src/widgets/Quiz.js"],"names":["axios","Card","Grid","Toolbar","IconButton","DashboardIcon","SettingsIcon","LoopIcon","DeleteIcon","Typography","CardContent","React","useEffect","useState","Modal","Button","Form","FormGroup","Input","makeStyles","entryPoint","useStyles","theme","nasaHeader","backgroundColor","color","save","border","getQuestion","difficulty","category","response","method","url","data","e","console","log","QuizCard","props","classes","undefined","setData","setDifficulty","clue","setClue","resAnswer","setResAnswer","setCategory","reset","setReset","hidden","setHidden","fetchData","res","content","textAlign","marginLeft","marginRight","marginTop","results","diff","type","question","clue_answer","incorrect_answers","answer","correct_answer","modal","setModal","modalDifficulty","setModalDifficulty","modalCategory","setModalCategory","toggle","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React, {useEffect, useState} from \"react\";\nimport { Modal } from 'react-bootstrap';\nimport { Button, Form, FormGroup, Input} from 'reactstrap';\nimport {makeStyles} from \"@material-ui/core\";\n\nconst entryPoint = \"https://opentdb.com/api.php?\";\n\nconst useStyles = makeStyles(theme => ({\n    nasaHeader: {\n        backgroundColor: \"#c51ec5\",\n        color: \"#FFFFFF\"\n    },\n    save: {\n        backgroundColor: \"#12ACDE\",\n        border: \"#12ACDE\",\n        color: \"#FFFFFF\",\n        \"&:hover\": {\n            backgroundColor: \"#0F91BC\"\n        }\n    },\n}));\n\nconst getQuestion = async (difficulty=\"\", category=\"\") => {\n    try {\n        const response =  await axios ({\n            method: 'GET',\n            url: entryPoint + 'amount=1&difficulty=' + difficulty + '&category=' + category,\n        })\n        return response.data;\n    }\n    catch (e) {\n        console.log(\"error: \", e);\n    }\n};\n\nconst QuizCard = (props) => {\n    const classes = useStyles();\n    const [data, setData] = useState(undefined);\n    const [difficulty, setDifficulty] = useState(\"\");\n    const [clue, setClue] = useState(\"Click on me if you want a clue !\");\n    const [resAnswer, setResAnswer] = useState(\"Click on me if you want the answer !\");\n    const [category, setCategory] = useState(0);\n    const [reset, setReset] = useState(0);\n    const [hidden, setHidden] = useState(null);\n\n    useEffect(\n        () => {\n            async function fetchData() {\n                let res = await getQuestion(difficulty, category);\n                setData(res);\n            }\n\n            fetchData();\n        }, [difficulty, category, reset]);\n\n    const content = (data) => {\n        if (data === undefined) {\n            return (\n                <div style={{textAlign: \"center\", marginLeft: \"15px\", marginRight: \"15px\", marginTop: \"15px\"}}>\n                    <h4>Loading</h4>\n                </div>\n            );\n        } else {\n            let theme = data.results[0].category;\n            let diff = data.results[0].difficulty;\n            let type = data.results[0].type;\n            let question = data.results[0].question;\n            let clue_answer = \"You really think that you're getting a clue on a true or false ?\";\n            if (type !== \"boolean\") {\n                clue_answer = \"the answer isn't \" + data.results[0].incorrect_answers[0];\n            }\n            let answer = \"the answer is \" + data.results[0].correct_answer;\n            return (\n                <div>\n                    <Grid container spacing={2}>\n                        <Grid item xs={10}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                Category : {theme}<br/>Difficulty : {diff}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <IconButton onClick={() => {\n                                setReset(reset + 1);\n                                setResAnswer(\"Click on me if you want the answer !\");\n                                setClue(\"Click on me if you want a clue !\")\n                            }}>\n                                <LoopIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h6\">\n                                {question} {type === \"boolean\" ? \"True or False ?\" : \"\"}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                <Grid item xs={12}>\n                                    {type === \"boolean\" ? \"True or False ?\" : data.results[0].correct_answer}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    {type === \"boolean\" ? \"\" : data.results[0].incorrect_answers[2]}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    {type === \"boolean\" ? \"\" : data.results[0].incorrect_answers[0]}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    {type === \"boolean\" ? \"\" : data.results[0].incorrect_answers[1]}\n                                </Grid>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\" onClick={() => {\n                                setClue(clue_answer)\n                            }}>\n                                {clue}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" color=\"textSecondary\" onClick={() => {\n                                setResAnswer(answer)\n                            }}>\n                                {resAnswer}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        }\n    };\n\n    const [modal, setModal] = useState(false);\n    const [modalDifficulty, setModalDifficulty] = useState(\"\");\n    const [modalCategory, setModalCategory] = useState(0);\n\n    const toggle = () => setModal(!modal);\n\n    if (hidden === \"hidden\") {\n        return (<Card hidden>Nasa</Card>);\n    } else {\n        return (\n            <Card>\n                <Modal show={modal} onHide={toggle} centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Quiz params</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <FormGroup>\n                                <label>Quiz difficulty</label>\n                                <Input type=\"select\" onChange={e => setModalDifficulty(e.target.value)}>\n                                    <option selected={difficulty === \"easy\"}>easy</option>\n                                    <option selected={difficulty === \"medium\"}>medium</option>\n                                    <option selected={difficulty === \"hard\"}>hard</option>\n                                    <option value={\"\"} selected={difficulty === \"\"}>random</option>\n                                </Input>\n                            </FormGroup>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Body>\n                        <Form>\n                            <FormGroup>\n                                <label>Quiz category</label>\n                                <Input type=\"select\" onChange={e => setModalCategory(e.target.value)}>\n                                    <option value={0} selected={category == 0}>random</option>\n                                    <option value={31} selected={category == 31}>Entertainment: Japanese Anime & Manga\n                                    </option>\n                                    <option value={32} selected={category == 32}>Entertainment: Cartoon & Animations\n                                    </option>\n                                    <option value={30} selected={category == 30}>Science: Gadgets</option>\n                                    <option value={29} selected={category == 29}>Entertainment: Comics</option>\n                                    <option value={28} selected={category == 28}>Vehicles</option>\n                                    <option value={27} selected={category == 27}>Animals</option>\n                                    <option value={26} selected={category == 26}>Celebrities</option>\n                                    <option value={25} selected={category == 25}>Art</option>\n                                    <option value={24} selected={category == 24}>Politics</option>\n                                    <option value={23} selected={category == 23}>History</option>\n                                    <option value={22} selected={category == 22}>Geography</option>\n                                    <option value={21} selected={category == 21}>Sports</option>\n                                    <option value={20} selected={category == 20}>Mythology</option>\n                                    <option value={19} selected={category == 19}>Science: Mathematics</option>\n                                    <option value={18} selected={category == 18}>Science: Computers</option>\n                                    <option value={17} selected={category == 17}>Science & Nature</option>\n                                    <option value={16} selected={category == 16}>Entertainment: Board Games</option>\n                                    <option value={15} selected={category == 15}>Entertainment: Video Games</option>\n                                    <option value={14} selected={category == 14}>Entertainment: Television</option>\n                                    <option value={13} selected={category == 13}>Entertainment: Musicals & Theatres</option>\n                                    <option value={12} selected={category == 12}>Entertainment: Music</option>\n                                    <option value={11} selected={category == 11}>Entertainment: Film</option>\n                                    <option value={10} selected={category == 10}>Entertainment: Books</option>\n                                    <option value={9} selected={category == 9}>General Knowledge</option>\n                                </Input>\n                            </FormGroup>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className={classes.save} onClick={() => {\n                            setDifficulty(modalDifficulty);\n                            setCategory(modalCategory);\n                            toggle()\n                        }}>Save</Button>\n                    </Modal.Footer>\n                </Modal>\n                <Toolbar position=\"static\" className={classes.nasaHeader}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={2}>\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                                <DashboardIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={8}>\n                            <div style={{marginTop: \"10px\"}}>\n                                <Typography style={{textAlign: \"center\"}} variant=\"h5\">\n                                    Quiz\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton color=\"inherit\" aria-label=\"menu\" onClick={toggle}>\n                                <SettingsIcon/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton color=\"inherit\" aria-label=\"menu\" onClick={() => setHidden(\"hidden\")}>\n                                <DeleteIcon/>\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n                <CardContent>\n                    {content(data)}\n                </CardContent>\n            </Card>\n        );\n    }\n};\n\nexport default QuizCard;"]},"metadata":{},"sourceType":"module"}