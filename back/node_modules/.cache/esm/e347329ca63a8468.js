let routes,morgan,express,mongoose,bodyParser,cors,requestIp;_a63‍.w("./routes",[["default",["routes"],function(v){routes=v}]]);_a63‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_a63‍.w("express",[["default",["express"],function(v){express=v}]]);_a63‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_a63‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_a63‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_a63‍.w("request-ip",[["default",["requestIp"],function(v){requestIp=v}]]);







mongoose
    .connect("mongodb://mongo:27017/db")
    .then(() => {
        console.log("Connected to mongoDB");
    })
    .catch((e) => {
        console.log("Error while DB connecting");
        _a63‍.g.console.log(e);
    });

const app = express();

const urlencodedParser = bodyParser.urlencoded({
    extended: true
});

app.use(cors());

app.use(urlencodedParser);

app.use(bodyParser.json());

app.use(requestIp.mw());

morgan.token('body', (req, res) => JSON.stringify(req.body));

app.use(morgan('[:date[web]] Started :method :url for :remote-addr', true));
app.use(morgan('[:date[web]] Started with body :body', true));
app.use(morgan('[:date[iso]] Completed :status :res[content-length] in :response-time ms',),);

const router = express.Router();
app.use("/", routes);

const port = 8800;
app.listen(port, () => console.log(`Listening on port ${port}`));